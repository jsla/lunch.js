{"version":3,"file":"url_handling_strategy.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/url_handling_strategy.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH;;;;;GAKG;AACH;IAAA;IA6BA,CAAC;IA5BD;;;;;;;;;;OAUG;IACH,8CAAgB,GAAhB,UAAiB,GAAY,IAAG,CAAC;IACjC;;;;;;OAMG;IACH,qCAAO,GAAP,UAAQ,GAAY,IAAG,CAAC;IACxB;;;;;;OAMG;IACH,mCAAK,GAAL,UAAM,UAAmB,EAAE,MAAe,IAAG,CAAC;IAC9C,0BAAC;AAAD,CAAC,AA7BD,IA6BC;AACD;;GAEG;AACH;IAAA;IAiBA,CAAC;IAhBD;;;OAGG;IACH,qDAAgB,GAAhB,UAAiB,GAAY,IAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD;;;OAGG;IACH,4CAAO,GAAP,UAAQ,GAAY,IAAa,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C;;;;OAIG;IACH,0CAAK,GAAL,UAAM,UAAmB,EAAE,QAAiB,IAAa,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAC7E,iCAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UrlTree} from './url_tree';\n/**\n * \\@whatItDoes Provides a way to migrate Angular 1 applications to Angular 2.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class UrlHandlingStrategy {\n/**\n * Tells the router if this URL should be processed.\n * \n * When it returns true, the router will execute the regular navigation.\n * When it returns false, the router will set the router state to an empty state.\n * As a result, all the active components will be destroyed.\n * \n * @abstract\n * @param {?} url\n * @return {?}\n */\nshouldProcessUrl(url: UrlTree) {}\n/**\n * Extracts the part of the URL that should be handled by the router.\n * The rest of the URL will remain untouched.\n * @abstract\n * @param {?} url\n * @return {?}\n */\nextract(url: UrlTree) {}\n/**\n * Merges the URL fragment with the rest of the URL.\n * @abstract\n * @param {?} newUrlPart\n * @param {?} rawUrl\n * @return {?}\n */\nmerge(newUrlPart: UrlTree, rawUrl: UrlTree) {}\n}\n/**\n * \\@experimental\n */\nexport class DefaultUrlHandlingStrategy implements UrlHandlingStrategy {\n/**\n * @param {?} url\n * @return {?}\n */\nshouldProcessUrl(url: UrlTree): boolean { return true; }\n/**\n * @param {?} url\n * @return {?}\n */\nextract(url: UrlTree): UrlTree { return url; }\n/**\n * @param {?} newUrlPart\n * @param {?} wholeUrl\n * @return {?}\n */\nmerge(newUrlPart: UrlTree, wholeUrl: UrlTree): UrlTree { return newUrlPart; }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}