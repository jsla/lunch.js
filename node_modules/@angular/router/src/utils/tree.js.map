{"version":3,"file":"tree.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/utils/tree.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class Tree<T> {\n  /** @internal */\n  _root: TreeNode<T>;\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<T>) { this._root = root; }\n/**\n * @return {?}\n */\nget root(): T { return this._root.value; }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nparent(t: T): T {\n    const /** @type {?} */ p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nchildren(t: T): T[] {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nfirstChild(t: T): T {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nsiblings(t: T): T[] {\n    const /** @type {?} */ p = findPath(t, this._root, []);\n    if (p.length < 2) return [];\n\n    const /** @type {?} */ c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\npathFromRoot(t: T): T[] { return findPath(t, this._root, []).map(s => s.value); }\n}\n\nfunction Tree_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTree.prototype._root;\n}\n\n/**\n * @param {?} expected\n * @param {?} c\n * @return {?}\n */\nfunction findNode<T>(expected: T, c: TreeNode<T>): TreeNode<T> {\n  if (expected === c.value) return c;\n  for (const /** @type {?} */ cc of c.children) {\n    const /** @type {?} */ r = findNode(expected, cc);\n    if (r) return r;\n  }\n  return null;\n}\n/**\n * @param {?} expected\n * @param {?} c\n * @param {?} collected\n * @return {?}\n */\nfunction findPath<T>(expected: T, c: TreeNode<T>, collected: TreeNode<T>[]): TreeNode<T>[] {\n  collected.push(c);\n  if (expected === c.value) return collected;\n\n  for (const /** @type {?} */ cc of c.children) {\n    const /** @type {?} */ cloned = collected.slice(0);\n    const /** @type {?} */ r = findPath(expected, cc, cloned);\n    if (r.length > 0) return r;\n  }\n\n  return [];\n}\nexport class TreeNode<T> {\n/**\n * @param {?} value\n * @param {?} children\n */\nconstructor(public value: T,\npublic children: TreeNode<T>[]) {}\n/**\n * @return {?}\n */\ntoString(): string { return `TreeNode(${this.value})`; }\n}\n\nfunction TreeNode_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeNode.prototype.value;\n/** @type {?} */\nTreeNode.prototype.children;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}