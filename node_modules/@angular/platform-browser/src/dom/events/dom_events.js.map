{"version":3,"file":"dom_events.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/events/dom_events.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,kBAAkB,EAAC,MAAM,iBAAiB;AAClD;IAAqC,mCAAkB;IAAvD;QAAqC,8BAAkB;IAsBvD,CAAC;IArBD;;;OAGG;IACH,kCAAQ,GAAR,UAAS,SAAiB,IAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD;;;;;OAKG;IACH,0CAAgB,GAAhB,UAAiB,OAAoB,EAAE,SAAiB,EAAE,OAAiB;QACvE,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,gBAAgB,CAAA,CAAG,OAAe,CAAC,EAAE,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,gBAAgB,CAAA,CAAG,OAAe,CAAC,EAAE,KAAK,CAAC,EAAlF,CAAkF,CAAC;IAClG,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,sBAAC;AAAD,CAAC,AAtBD,CAAqC,kBAAkB,GAsBtD;AAED;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\nexport class DomEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return true; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, /** @type {?} */(( handler as any)), false);\n    return () => element.removeEventListener(eventName, /** @type {?} */(( handler as any)), false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DomEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDomEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}