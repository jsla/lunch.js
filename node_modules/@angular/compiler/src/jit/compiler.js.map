{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/jit/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Injector, ModuleWithComponentFactories, NgModuleFactory, SchemaMetadata, Type} from '@angular/core';\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\nimport {AnimationParser} from '../animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeMetadata, ProviderMeta, createHostComponentMeta, identifierName} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveWrapperCompiler} from '../directive_wrapper_compiler';\nimport {stringify} from '../facade/lang';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {jitStatements} from '../output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {SyncAsyncResult} from '../util';\nimport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency, ViewCompiler} from '../view_compiler/view_compiler';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n * \n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\n@CompilerInjectable()\nexport class JitCompiler implements Compiler {\nprivate _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledDirectiveWrapperCache = new Map<Type<any>, Type<any>>();\nprivate _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\nprivate _animationCompiler = new AnimationCompiler();\n/**\n * @param {?} _injector\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _directiveWrapperCompiler\n * @param {?} _compilerConfig\n * @param {?} _animationParser\n */\nconstructor(\nprivate _injector: Injector,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _directiveWrapperCompiler: DirectiveWrapperCompiler,\nprivate _compilerConfig: CompilerConfig,\nprivate _animationParser: AnimationParser) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._compileModuleAndComponents(moduleType, true).syncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._compileModuleAndComponents(moduleType, false).asyncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    const /** @type {?} */ template = this._compiledTemplateCache.get(component);\n    if (!template) {\n      throw new Error(`The component ${stringify(component)} is not yet compiled!`);\n    }\n    return template.compMeta.template.ngContentSelectors;\n  }\n/**\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\nprivate _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<NgModuleFactory<T>> {\n    const /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n    const /** @type {?} */ createResult = () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n/**\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\nprivate _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<ModuleWithComponentFactories<T>> {\n    const /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n    const /** @type {?} */ createResult = () => {\n      const /** @type {?} */ componentFactories: ComponentFactory<any>[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n/**\n * @param {?} mainModule\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadModules(mainModule: any, isSync: boolean): Promise<any> {\n    const /** @type {?} */ loadingPromises: Promise<any>[] = [];\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    // Note: the loadingPromise for a module only includes the loading of the exported directives\n    // of imported modules.\n    // However, for runtime compilation, we want to transitively compile all modules,\n    // so we also need to call loadNgModuleDirectiveAndPipeMetadata for all nested modules.\n    ngModule.transitiveModule.modules.forEach((localModuleMeta) => {\n      loadingPromises.push(this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n          localModuleMeta.reference, isSync));\n    });\n    return Promise.all(loadingPromises);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\nprivate _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let /** @type {?} */ ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n    if (!ngModuleFactory) {\n      const /** @type {?} */ moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      // Always provide a bound Compiler\n      const /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      const /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta, extraProviders);\n      compileResult.dependencies.forEach((dep) => {\n        dep.placeholder.reference =\n            this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n      });\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n      } else {\n        ngModuleFactory = jitStatements(\n            `/${identifierName(moduleMeta.type)}/module.ngfactory.js`, compileResult.statements,\n            compileResult.ngModuleFactoryVar);\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n/**\n * \\@internal\n * @param {?} mainModule\n * @param {?} allComponentFactories\n * @return {?}\n */\n_compileComponents(mainModule: Type<any>, allComponentFactories: ComponentFactory<any>[]) {\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    const /** @type {?} */ moduleByDirective = new Map<any, CompileNgModuleMetadata>();\n    const /** @type {?} */ templates = new Set<CompiledTemplate>();\n\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const /** @type {?} */ localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const /** @type {?} */ template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push(template.proxyComponentFactory);\n          }\n        }\n      });\n    });\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const /** @type {?} */ localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.reference);\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        const /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.reference);\n        templates.add(this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n/**\n * @param {?} compType\n * @param {?} ngModule\n * @return {?}\n */\nprivate _createCompiledHostTemplate(compType: Type<any>, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const /** @type {?} */ HostClass = function HostClass() {};\n      ( /** @type {?} */((<any>HostClass))).overriddenName = `${identifierName(compMeta.type)}_Host`;\n\n      const /** @type {?} */ hostMeta = createHostComponentMeta(HostClass, compMeta);\n      compiledTemplate = new CompiledTemplate(\n          true, compMeta.selector, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @return {?}\n */\nprivate _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.selector, compMeta.type, compMeta, ngModule,\n          ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} compType\n * @param {?} isHost\n * @return {?}\n */\nprivate _assertComponentKnown(compType: any, isHost: boolean): CompiledTemplate {\n    const /** @type {?} */ compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n                                      this._compiledTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      throw new Error(\n          `Illegal state: Compiled view for component ${stringify(compType)} (host: ${isHost}) does not exist!`);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate _assertDirectiveWrapper(dirType: any): Type<any> {\n    const /** @type {?} */ dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n    if (!dirWrapper) {\n      throw new Error(\n          `Illegal state: Directive wrapper for ${stringify(dirType)} has not been compiled!`);\n    }\n    return dirWrapper;\n  }\n/**\n * @param {?} dirMeta\n * @param {?} moduleMeta\n * @return {?}\n */\nprivate _compileDirectiveWrapper(\n      dirMeta: CompileDirectiveMetadata, moduleMeta: CompileNgModuleMetadata): void {\n    const /** @type {?} */ compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n    const /** @type {?} */ statements = compileResult.statements;\n    let /** @type {?} */ directiveWrapperClass: any;\n    if (!this._compilerConfig.useJit) {\n      directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n    } else {\n      directiveWrapperClass = jitStatements(\n          `/${identifierName(moduleMeta.type)}/${identifierName(dirMeta.type)}/wrapper.ngfactory.js`,\n          statements, compileResult.dirWrapperClassVar);\n    }\n    this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n  }\n/**\n * @param {?} template\n * @return {?}\n */\nprivate _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const /** @type {?} */ compMeta = template.compMeta;\n    const /** @type {?} */ externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    const /** @type {?} */ parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const /** @type {?} */ directives =\n        template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const /** @type {?} */ parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas,\n        identifierName(compMeta.type));\n    const /** @type {?} */ compiledAnimations =\n        this._animationCompiler.compile(identifierName(compMeta.type), parsedAnimations);\n    const /** @type {?} */ compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        pipes, compiledAnimations);\n    compileResult.dependencies.forEach((dep) => {\n      let /** @type {?} */ depTemplate: CompiledTemplate;\n      if (dep instanceof ViewClassDependency) {\n        const /** @type {?} */ vfd = /** @type {?} */(( <ViewClassDependency>dep));\n        depTemplate = this._assertComponentKnown(vfd.comp.reference, false);\n        vfd.placeholder.reference = depTemplate.proxyViewClass;\n      } else if (dep instanceof ComponentFactoryDependency) {\n        const /** @type {?} */ cfd = /** @type {?} */(( <ComponentFactoryDependency>dep));\n        depTemplate = this._assertComponentKnown(cfd.comp.reference, true);\n        cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n      } else if (dep instanceof DirectiveWrapperDependency) {\n        const /** @type {?} */ dwd = /** @type {?} */(( <DirectiveWrapperDependency>dep));\n        dwd.placeholder.reference = this._assertDirectiveWrapper(dwd.dir.reference);\n      }\n    });\n    const /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements\n                           .concat(...compiledAnimations.map(ca => ca.statements))\n                           .concat(compileResult.statements);\n    let /** @type {?} */ viewClass: any;\n    if (!this._compilerConfig.useJit) {\n      viewClass = interpretStatements(statements, compileResult.viewClassVar);\n    } else {\n      viewClass = jitStatements(\n          `/${identifierName(template.ngModule.type)}/${identifierName(template.compType)}/${template.isHost?'host':'component'}.ngfactory.js`,\n          statements, compileResult.viewClassVar);\n    }\n    template.compiled(viewClass);\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\nprivate _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const /** @type {?} */ nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      const /** @type {?} */ nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.reference = nestedStylesArr;\n    });\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\nprivate _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.statements, result.stylesVar);\n    } else {\n      return jitStatements(\n          `/${result.meta.moduleUrl}.ngstyle.js`, result.statements, result.stylesVar);\n    }\n  }\n}\n\nfunction JitCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompiler.prototype._compiledTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledHostTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledDirectiveWrapperCache;\n/** @type {?} */\nJitCompiler.prototype._compiledNgModuleCache;\n/** @type {?} */\nJitCompiler.prototype._animationCompiler;\n/** @type {?} */\nJitCompiler.prototype._injector;\n/** @type {?} */\nJitCompiler.prototype._metadataResolver;\n/** @type {?} */\nJitCompiler.prototype._templateParser;\n/** @type {?} */\nJitCompiler.prototype._styleCompiler;\n/** @type {?} */\nJitCompiler.prototype._viewCompiler;\n/** @type {?} */\nJitCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nJitCompiler.prototype._directiveWrapperCompiler;\n/** @type {?} */\nJitCompiler.prototype._compilerConfig;\n/** @type {?} */\nJitCompiler.prototype._animationParser;\n}\n\nclass CompiledTemplate {\nprivate _viewClass: Function = null;\n  proxyViewClass: Type<any>;\n  proxyComponentFactory: ComponentFactory<any>;\n  isCompiled = false;\n/**\n * @param {?} isHost\n * @param {?} selector\n * @param {?} compType\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directives\n */\nconstructor(\npublic isHost: boolean, selector: string,\npublic compType: CompileIdentifierMetadata,\npublic compMeta: CompileDirectiveMetadata,\npublic ngModule: CompileNgModuleMetadata,\npublic directives: CompileIdentifierMetadata[]) {\n    const self = this;\n    this.proxyViewClass = <any>function() {\n      if (!self._viewClass) {\n        throw new Error(\n            `Illegal state: CompiledTemplate for ${stringify(self.compType)} is not compiled yet!`);\n      }\n      return self._viewClass.apply(this, arguments);\n    };\n    this.proxyComponentFactory = isHost ?\n        new ComponentFactory<any>(selector, this.proxyViewClass, compType.reference) :\n        null;\n  }\n/**\n * @param {?} viewClass\n * @return {?}\n */\ncompiled(viewClass: Function) {\n    this._viewClass = viewClass;\n    this.proxyViewClass.prototype = viewClass.prototype;\n    this.isCompiled = true;\n  }\n}\n\nfunction CompiledTemplate_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledTemplate.prototype._viewClass;\n/** @type {?} */\nCompiledTemplate.prototype.proxyViewClass;\n/** @type {?} */\nCompiledTemplate.prototype.proxyComponentFactory;\n/** @type {?} */\nCompiledTemplate.prototype.isCompiled;\n/** @type {?} */\nCompiledTemplate.prototype.isHost;\n/** @type {?} */\nCompiledTemplate.prototype.compType;\n/** @type {?} */\nCompiledTemplate.prototype.compMeta;\n/** @type {?} */\nCompiledTemplate.prototype.ngModule;\n/** @type {?} */\nCompiledTemplate.prototype.directives;\n}\n\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n/**\n * @param {?} _delegate\n * @param {?} _ngModule\n */\nconstructor(private _delegate: JitCompiler,\nprivate _ngModule: Type<any>) {}\n/**\n * @return {?}\n */\nget _injector(): Injector { return this._delegate.injector; }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    return this._delegate.getNgContentSelectors(component);\n  }\n/**\n * Clears all caches\n * @return {?}\n */\nclearCache(): void { this._delegate.clearCache(); }\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\nfunction ModuleBoundCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleBoundCompiler.prototype._delegate;\n/** @type {?} */\nModuleBoundCompiler.prototype._ngModule;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}