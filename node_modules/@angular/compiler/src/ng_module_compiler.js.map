{"version":3,"file":"ng_module_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/ng_module_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDiDependencyMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileProviderMetadata, CompileTokenMetadata, identifierModuleUrl, identifierName, tokenName, tokenReference} from './compile_metadata';\nimport {createDiTokenExpression} from './compiler_util/identifier_util';\nimport {isPresent} from './facade/lang';\nimport {Identifiers, createIdentifier, resolveIdentifier} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {ClassBuilder, createClassStmt} from './output/class_builder';\nimport * as o from './output/output_ast';\nimport {convertValueToOutputAst} from './output/value_util';\nimport {ParseLocation, ParseSourceFile, ParseSourceSpan} from './parse_util';\nimport {LifecycleHooks} from './private_import_core';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {ProviderAst} from './template_parser/template_ast';\nexport class ComponentFactoryDependency {\n/**\n * @param {?} comp\n * @param {?} placeholder\n */\nconstructor(\npublic comp: CompileIdentifierMetadata,\npublic placeholder: CompileIdentifierMetadata) {}\n}\n\nfunction ComponentFactoryDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryDependency.prototype.comp;\n/** @type {?} */\nComponentFactoryDependency.prototype.placeholder;\n}\n\nexport class NgModuleCompileResult {\n/**\n * @param {?} statements\n * @param {?} ngModuleFactoryVar\n * @param {?} dependencies\n */\nconstructor(\npublic statements: o.Statement[],\npublic ngModuleFactoryVar: string,\npublic dependencies: ComponentFactoryDependency[]) {}\n}\n\nfunction NgModuleCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleCompileResult.prototype.statements;\n/** @type {?} */\nNgModuleCompileResult.prototype.ngModuleFactoryVar;\n/** @type {?} */\nNgModuleCompileResult.prototype.dependencies;\n}\n\n@CompilerInjectable()\nexport class NgModuleCompiler {\n/**\n * @param {?} ngModuleMeta\n * @param {?} extraProviders\n * @return {?}\n */\ncompile(ngModuleMeta: CompileNgModuleMetadata, extraProviders: CompileProviderMetadata[]):\n      NgModuleCompileResult {\n    const /** @type {?} */ moduleUrl = identifierModuleUrl(ngModuleMeta.type);\n    const /** @type {?} */ sourceFileName = isPresent(moduleUrl) ?\n        `in NgModule ${identifierName(ngModuleMeta.type)} in ${moduleUrl}` :\n        `in NgModule ${identifierName(ngModuleMeta.type)}`;\n    const /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n        new ParseLocation(sourceFile, null, null, null),\n        new ParseLocation(sourceFile, null, null, null));\n    const /** @type {?} */ deps: ComponentFactoryDependency[] = [];\n    const /** @type {?} */ bootstrapComponentFactories: CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ entryComponentFactories =\n        ngModuleMeta.transitiveModule.entryComponents.map((entryComponent) => {\n          const /** @type {?} */ id: CompileIdentifierMetadata = {reference: null};\n          if (ngModuleMeta.bootstrapComponents.some(\n                  (id) => id.reference === entryComponent.reference)) {\n            bootstrapComponentFactories.push(id);\n          }\n          deps.push(new ComponentFactoryDependency(entryComponent, id));\n          return id;\n        });\n    const /** @type {?} */ builder = new _InjectorBuilder(\n        ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n\n    const /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n    providerParser.parse().forEach((provider) => builder.addProvider(provider));\n    const /** @type {?} */ injectorClass = builder.build();\n    const /** @type {?} */ ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n    const /** @type {?} */ ngModuleFactoryStmt =\n        o.variable(ngModuleFactoryVar)\n            .set(o.importExpr(createIdentifier(Identifiers.NgModuleFactory))\n                     .instantiate(\n                         [o.variable(injectorClass.name), o.importExpr(ngModuleMeta.type)],\n                         o.importType(\n                             createIdentifier(Identifiers.NgModuleFactory),\n                             [o.importType(ngModuleMeta.type)], [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]);\n\n    const /** @type {?} */ stmts: o.Statement[] = [injectorClass, ngModuleFactoryStmt];\n    if (ngModuleMeta.id) {\n      const /** @type {?} */ registerFactoryStmt =\n          o.importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n              .callFn([o.literal(ngModuleMeta.id), o.variable(ngModuleFactoryVar)])\n              .toStmt();\n      stmts.push(registerFactoryStmt);\n    }\n\n    return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n  }\n}\nclass _InjectorBuilder implements ClassBuilder {\n  fields: o.ClassField[] = [];\n  getters: o.ClassGetter[] = [];\n  methods: o.ClassMethod[] = [];\n  ctorStmts: o.Statement[] = [];\nprivate _tokens: CompileTokenMetadata[] = [];\nprivate _instances = new Map<any, o.Expression>();\nprivate _createStmts: o.Statement[] = [];\nprivate _destroyStmts: o.Statement[] = [];\n/**\n * @param {?} _ngModuleMeta\n * @param {?} _entryComponentFactories\n * @param {?} _bootstrapComponentFactories\n * @param {?} _sourceSpan\n */\nconstructor(\nprivate _ngModuleMeta: CompileNgModuleMetadata,\nprivate _entryComponentFactories: CompileIdentifierMetadata[],\nprivate _bootstrapComponentFactories: CompileIdentifierMetadata[],\nprivate _sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} resolvedProvider\n * @return {?}\n */\naddProvider(resolvedProvider: ProviderAst) {\n    const /** @type {?} */ providerValueExpressions =\n        resolvedProvider.providers.map((provider) => this._getProviderValue(provider));\n    const /** @type {?} */ propName = `_${tokenName(resolvedProvider.token)}_${this._instances.size}`;\n    const /** @type {?} */ instance = this._createProviderProperty(\n        propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider,\n        resolvedProvider.eager);\n    if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n      this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n    }\n    this._tokens.push(resolvedProvider.token);\n    this._instances.set(tokenReference(resolvedProvider.token), instance);\n  }\n/**\n * @return {?}\n */\nbuild(): o.ClassStmt {\n    const /** @type {?} */ getMethodStmts: o.Statement[] = this._tokens.map((token) => {\n      const /** @type {?} */ providerExpr = this._instances.get(tokenReference(token));\n      return new o.IfStmt(\n          InjectMethodVars.token.identical(createDiTokenExpression(token)),\n          [new o.ReturnStatement(providerExpr)]);\n    });\n    const /** @type {?} */ methods = [\n      new o.ClassMethod(\n          'createInternal', [], this._createStmts.concat(new o.ReturnStatement(\n                                    this._instances.get(this._ngModuleMeta.type.reference))),\n          o.importType(this._ngModuleMeta.type)),\n      new o.ClassMethod(\n          'getInternal',\n          [\n            new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n            new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n          ],\n          getMethodStmts.concat([new o.ReturnStatement(InjectMethodVars.notFoundResult)]),\n          o.DYNAMIC_TYPE),\n      new o.ClassMethod('destroyInternal', [], this._destroyStmts),\n    ];\n\n    const /** @type {?} */ parentArgs = [\n      o.variable(InjectorProps.parent.name),\n      o.literalArr(\n          this._entryComponentFactories.map((componentFactory) => o.importExpr(componentFactory))),\n      o.literalArr(this._bootstrapComponentFactories.map(\n          (componentFactory) => o.importExpr(componentFactory)))\n    ];\n    const /** @type {?} */ injClassName = `${identifierName(this._ngModuleMeta.type)}Injector`;\n    return createClassStmt({\n      name: injClassName,\n      ctorParams: [new o.FnParam(\n          InjectorProps.parent.name, o.importType(createIdentifier(Identifiers.Injector)))],\n      parent: o.importExpr(\n          createIdentifier(Identifiers.NgModuleInjector), [o.importType(this._ngModuleMeta.type)]),\n      parentArgs: parentArgs,\n      builders: [{methods}, this]\n    });\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _getProviderValue(provider: CompileProviderMetadata): o.Expression {\n    let /** @type {?} */ result: o.Expression;\n    if (isPresent(provider.useExisting)) {\n      result = this._getDependency({token: provider.useExisting});\n    } else if (isPresent(provider.useFactory)) {\n      const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n      const /** @type {?} */ depsExpr = deps.map((dep) => this._getDependency(dep));\n      result = o.importExpr(provider.useFactory).callFn(depsExpr);\n    } else if (isPresent(provider.useClass)) {\n      const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n      const /** @type {?} */ depsExpr = deps.map((dep) => this._getDependency(dep));\n      result =\n          o.importExpr(provider.useClass).instantiate(depsExpr, o.importType(provider.useClass));\n    } else {\n      result = convertValueToOutputAst(provider.useValue);\n    }\n    return result;\n  }\n/**\n * @param {?} propName\n * @param {?} provider\n * @param {?} providerValueExpressions\n * @param {?} isMulti\n * @param {?} isEager\n * @return {?}\n */\nprivate _createProviderProperty(\n      propName: string, provider: ProviderAst, providerValueExpressions: o.Expression[],\n      isMulti: boolean, isEager: boolean): o.Expression {\n    let /** @type {?} */ resolvedProviderValueExpr: o.Expression;\n    let /** @type {?} */ type: o.Type;\n    if (isMulti) {\n      resolvedProviderValueExpr = o.literalArr(providerValueExpressions);\n      type = new o.ArrayType(o.DYNAMIC_TYPE);\n    } else {\n      resolvedProviderValueExpr = providerValueExpressions[0];\n      type = providerValueExpressions[0].type;\n    }\n    if (!type) {\n      type = o.DYNAMIC_TYPE;\n    }\n    if (isEager) {\n      this.fields.push(new o.ClassField(propName, type));\n      this._createStmts.push(o.THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n    } else {\n      const /** @type {?} */ internalField = `_${propName}`;\n      this.fields.push(new o.ClassField(internalField, type));\n      // Note: Equals is important for JS so that it also checks the undefined case!\n      const /** @type {?} */ getterStmts = [\n        new o.IfStmt(\n            o.THIS_EXPR.prop(internalField).isBlank(),\n            [o.THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n        new o.ReturnStatement(o.THIS_EXPR.prop(internalField))\n      ];\n      this.getters.push(new o.ClassGetter(propName, getterStmts, type));\n    }\n    return o.THIS_EXPR.prop(propName);\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getDependency(dep: CompileDiDependencyMetadata): o.Expression {\n    let /** @type {?} */ result: o.Expression = null;\n    if (dep.isValue) {\n      result = o.literal(dep.value);\n    }\n    if (!dep.isSkipSelf) {\n      if (dep.token &&\n          (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n           tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver))) {\n        result = o.THIS_EXPR;\n      }\n      if (!result) {\n        result = this._instances.get(tokenReference(dep.token));\n      }\n    }\n    if (!result) {\n      const /** @type {?} */ args = [createDiTokenExpression(dep.token)];\n      if (dep.isOptional) {\n        args.push(o.NULL_EXPR);\n      }\n      result = InjectorProps.parent.callMethod('get', args);\n    }\n    return result;\n  }\n}\n\nfunction _InjectorBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\n_InjectorBuilder.prototype.fields;\n/** @type {?} */\n_InjectorBuilder.prototype.getters;\n/** @type {?} */\n_InjectorBuilder.prototype.methods;\n/** @type {?} */\n_InjectorBuilder.prototype.ctorStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._tokens;\n/** @type {?} */\n_InjectorBuilder.prototype._instances;\n/** @type {?} */\n_InjectorBuilder.prototype._createStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._destroyStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._ngModuleMeta;\n/** @type {?} */\n_InjectorBuilder.prototype._entryComponentFactories;\n/** @type {?} */\n_InjectorBuilder.prototype._bootstrapComponentFactories;\n/** @type {?} */\n_InjectorBuilder.prototype._sourceSpan;\n}\n\nclass InjectorProps {\n  static parent = o.THIS_EXPR.prop('parent');\n}\n\nfunction InjectorProps_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectorProps.parent;\n}\n\nclass InjectMethodVars {\n  static token = o.variable('token');\n  static notFoundResult = o.variable('notFoundResult');\n}\n\nfunction InjectMethodVars_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectMethodVars.token;\n/** @type {?} */\nInjectMethodVars.notFoundResult;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}