{"version":3,"file":"style_url_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/style_url_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAMH;IACA;;;OAGG;IACH,0BAAmB,KAAa,EACzB,SAAmB;QADP,UAAK,GAAL,KAAK,CAAQ;QACzB,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;IAC9B,uBAAC;AAAD,CAAC,AAPD,IAOC;AAED;IACA,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC;IACjC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC;AACrC,CAAC;AAED;;;GAGG;AACH,qCAAqC,GAAW;IAC9C,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IACnE,IAAM,gBAAgB,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACvE,MAAM,CAAC,WAAW,KAAK,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;AAC1F,CAAC;AACD;;;;;;;GAOG;AACH,iCACI,QAAqB,EAAE,OAAe,EAAE,OAAe;IACzD,IAAM,gBAAgB,CAAC,SAAS,GAAa,EAAE,CAAC;IAEhD,IAAM,gBAAgB,CAAC,eAAe,GAClC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE;QAAC,WAAc;aAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;YAAd,0BAAc;;QAChF,IAAM,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,sEAAsE;YACtE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC;QACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IACP,MAAM,CAAC,IAAI,gBAAgB,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;AAC1D,CAAC;AAED,IAAM,gBAAgB,CAAC,iBAAiB,GAAG,iEAAiE,CAAC;AAC7G,IAAM,gBAAgB,CAAC,kBAAkB,GAAG,cAAc,CAAC;AAC3D,IAAM,gBAAgB,CAAC,sBAAsB,GAAG,cAAc,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {UrlResolver} from './url_resolver';\nexport class StyleWithImports {\n/**\n * @param {?} style\n * @param {?} styleUrls\n */\nconstructor(public style: string,\npublic styleUrls: string[]) {}\n}\n\nfunction StyleWithImports_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleWithImports.prototype.style;\n/** @type {?} */\nStyleWithImports.prototype.styleUrls;\n}\n\n/**\n * @param {?} url\n * @return {?}\n */\nexport function isStyleUrlResolvable(url: string): boolean {\n  if (url == null || url.length === 0 || url[0] == '/') return false;\n  const /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n  return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nexport function extractStyleUrls(\n    resolver: UrlResolver, baseUrl: string, cssText: string): StyleWithImports {\n  const /** @type {?} */ foundUrls: string[] = [];\n\n  const /** @type {?} */ modifiedCssText =\n      cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, (...m: string[]) => {\n        const /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n          // Do not attempt to resolve non-package absolute URLs with URI scheme\n          return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n      });\n  return new StyleWithImports(modifiedCssText, foundUrls);\n}\n\nconst /** @type {?} */ CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nconst /** @type {?} */ CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nconst /** @type {?} */ URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}