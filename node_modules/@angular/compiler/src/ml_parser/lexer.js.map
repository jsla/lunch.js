{"version":3,"file":"lexer.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/lexer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan} from '../parse_util';\n\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {NAMED_ENTITIES, TagContentType, TagDefinition} from './tags';\nexport type TokenType = number;\nexport let TokenType: any = {};\nTokenType.TAG_OPEN_START = 0;\nTokenType.TAG_OPEN_END = 1;\nTokenType.TAG_OPEN_END_VOID = 2;\nTokenType.TAG_CLOSE = 3;\nTokenType.TEXT = 4;\nTokenType.ESCAPABLE_RAW_TEXT = 5;\nTokenType.RAW_TEXT = 6;\nTokenType.COMMENT_START = 7;\nTokenType.COMMENT_END = 8;\nTokenType.CDATA_START = 9;\nTokenType.CDATA_END = 10;\nTokenType.ATTR_NAME = 11;\nTokenType.ATTR_VALUE = 12;\nTokenType.DOC_TYPE = 13;\nTokenType.EXPANSION_FORM_START = 14;\nTokenType.EXPANSION_CASE_VALUE = 15;\nTokenType.EXPANSION_CASE_EXP_START = 16;\nTokenType.EXPANSION_CASE_EXP_END = 17;\nTokenType.EXPANSION_FORM_END = 18;\nTokenType.EOF = 19;\nTokenType[TokenType.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType[TokenType.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType[TokenType.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType[TokenType.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType[TokenType.TEXT] = \"TEXT\";\nTokenType[TokenType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType[TokenType.RAW_TEXT] = \"RAW_TEXT\";\nTokenType[TokenType.COMMENT_START] = \"COMMENT_START\";\nTokenType[TokenType.COMMENT_END] = \"COMMENT_END\";\nTokenType[TokenType.CDATA_START] = \"CDATA_START\";\nTokenType[TokenType.CDATA_END] = \"CDATA_END\";\nTokenType[TokenType.ATTR_NAME] = \"ATTR_NAME\";\nTokenType[TokenType.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType[TokenType.DOC_TYPE] = \"DOC_TYPE\";\nTokenType[TokenType.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType[TokenType.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType[TokenType.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType[TokenType.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType[TokenType.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType[TokenType.EOF] = \"EOF\";\n\nexport class Token {\n/**\n * @param {?} type\n * @param {?} parts\n * @param {?} sourceSpan\n */\nconstructor(public type: TokenType,\npublic parts: string[],\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction Token_tsickle_Closure_declarations() {\n/** @type {?} */\nToken.prototype.type;\n/** @type {?} */\nToken.prototype.parts;\n/** @type {?} */\nToken.prototype.sourceSpan;\n}\n\nexport class TokenError extends ParseError {\n/**\n * @param {?} errorMsg\n * @param {?} tokenType\n * @param {?} span\n */\nconstructor(errorMsg: string,\npublic tokenType: TokenType, span: ParseSourceSpan) {\n    super(span, errorMsg);\n  }\n}\n\nfunction TokenError_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenError.prototype.tokenType;\n}\n\nexport class TokenizeResult {\n/**\n * @param {?} tokens\n * @param {?} errors\n */\nconstructor(public tokens: Token[],\npublic errors: TokenError[]) {}\n}\n\nfunction TokenizeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenizeResult.prototype.tokens;\n/** @type {?} */\nTokenizeResult.prototype.errors;\n}\n\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nexport function tokenize(\n    source: string, url: string, getTagDefinition: (tagName: string) => TagDefinition,\n    tokenizeExpansionForms: boolean = false,\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): TokenizeResult {\n  return new _Tokenizer(\n             new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms,\n             interpolationConfig)\n      .tokenize();\n}\n\nconst /** @type {?} */ _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode: number): string {\n  const /** @type {?} */ char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n  return `Unexpected character \"${char}\"`;\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc: string): string {\n  return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\nclass _ControlFlowError {\n/**\n * @param {?} error\n */\nconstructor(public error: TokenError) {}\n}\n\nfunction _ControlFlowError_tsickle_Closure_declarations() {\n/** @type {?} */\n_ControlFlowError.prototype.error;\n}\n\nclass _Tokenizer {\nprivate _input: string;\nprivate _length: number;\nprivate _peek: number = -1;\nprivate _nextPeek: number = -1;\nprivate _index: number = -1;\nprivate _line: number = 0;\nprivate _column: number = -1;\nprivate _currentTokenStart: ParseLocation;\nprivate _currentTokenType: TokenType;\nprivate _expansionCaseStack: TokenType[] = [];\nprivate _inInterpolation: boolean = false;\n\n  tokens: Token[] = [];\n  errors: TokenError[] = [];\n/**\n * @param {?} _file The html source\n * @param {?} _getTagDefinition\n * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n * @param {?=} _interpolationConfig\n */\nconstructor(\nprivate _file: ParseSourceFile,\nprivate _getTagDefinition: (tagName: string) => TagDefinition,\nprivate _tokenizeIcu: boolean,\nprivate _interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n    this._input = _file.content;\n    this._length = _file.content.length;\n    this._advance();\n  }\n/**\n * @param {?} content\n * @return {?}\n */\nprivate _processCarriageReturns(content: string): string {\n    // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n    // In order to keep the original position in the source, we can not\n    // pre-process it.\n    // Instead CRs are processed right before instantiating the tokens.\n    return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n  }\n/**\n * @return {?}\n */\ntokenize(): TokenizeResult {\n    while (this._peek !== chars.$EOF) {\n      const /** @type {?} */ start = this._getLocation();\n      try {\n        if (this._attemptCharCode(chars.$LT)) {\n          if (this._attemptCharCode(chars.$BANG)) {\n            if (this._attemptCharCode(chars.$LBRACKET)) {\n              this._consumeCdata(start);\n            } else if (this._attemptCharCode(chars.$MINUS)) {\n              this._consumeComment(start);\n            } else {\n              this._consumeDocType(start);\n            }\n          } else if (this._attemptCharCode(chars.$SLASH)) {\n            this._consumeTagClose(start);\n          } else {\n            this._consumeTagOpen(start);\n          }\n        } else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n          this._consumeText();\n        }\n      } catch ( /** @type {?} */e) {\n        if (e instanceof _ControlFlowError) {\n          this.errors.push(e.error);\n        } else {\n          throw e;\n        }\n      }\n    }\n    this._beginToken(TokenType.EOF);\n    this._endToken([]);\n    return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n  }\n/**\n * \\@internal\n * @return {?}\n */\nprivate _tokenizeExpansionForm(): boolean {\n    if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n      this._consumeExpansionFormStart();\n      return true;\n    }\n\n    if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n      this._consumeExpansionCaseStart();\n      return true;\n    }\n\n    if (this._peek === chars.$RBRACE) {\n      if (this._isInExpansionCase()) {\n        this._consumeExpansionCaseEnd();\n        return true;\n      }\n\n      if (this._isInExpansionForm()) {\n        this._consumeExpansionFormEnd();\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\nprivate _getLocation(): ParseLocation {\n    return new ParseLocation(this._file, this._index, this._line, this._column);\n  }\n/**\n * @param {?=} start\n * @param {?=} end\n * @return {?}\n */\nprivate _getSpan(\n      start: ParseLocation = this._getLocation(),\n      end: ParseLocation = this._getLocation()): ParseSourceSpan {\n    return new ParseSourceSpan(start, end);\n  }\n/**\n * @param {?} type\n * @param {?=} start\n * @return {?}\n */\nprivate _beginToken(type: TokenType, start: ParseLocation = this._getLocation()) {\n    this._currentTokenStart = start;\n    this._currentTokenType = type;\n  }\n/**\n * @param {?} parts\n * @param {?=} end\n * @return {?}\n */\nprivate _endToken(parts: string[], end: ParseLocation = this._getLocation()): Token {\n    const /** @type {?} */ token =\n        new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n    this.tokens.push(token);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return token;\n  }\n/**\n * @param {?} msg\n * @param {?} span\n * @return {?}\n */\nprivate _createError(msg: string, span: ParseSourceSpan): _ControlFlowError {\n    if (this._isInExpansionForm()) {\n      msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n    }\n    const /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return new _ControlFlowError(error);\n  }\n/**\n * @return {?}\n */\nprivate _advance() {\n    if (this._index >= this._length) {\n      throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n    }\n    if (this._peek === chars.$LF) {\n      this._line++;\n      this._column = 0;\n    } else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n      this._column++;\n    }\n    this._index++;\n    this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n    this._nextPeek =\n        this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _attemptCharCode(charCode: number): boolean {\n    if (this._peek === charCode) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _attemptCharCodeCaseInsensitive(charCode: number): boolean {\n    if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _requireCharCode(charCode: number) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptCharCode(charCode)) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n    }\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _attemptStr(chars: string): boolean {\n    const /** @type {?} */ len = chars.length;\n    if (this._index + len > this._length) {\n      return false;\n    }\n    const /** @type {?} */ initialPosition = this._savePosition();\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      if (!this._attemptCharCode(chars.charCodeAt(i))) {\n        // If attempting to parse the string fails, we want to reset the parser\n        // to where it was before the attempt\n        this._restorePosition(initialPosition);\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _attemptStrCaseInsensitive(chars: string): boolean {\n    for (let /** @type {?} */ i = 0; i < chars.length; i++) {\n      if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _requireStr(chars: string) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptStr(chars)) {\n      throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nprivate _attemptCharCodeUntilFn(predicate: (code: number) => boolean) {\n    while (!predicate(this._peek)) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} predicate\n * @param {?} len\n * @return {?}\n */\nprivate _requireCharCodeUntilFn(predicate: (code: number) => boolean, len: number) {\n    const /** @type {?} */ start = this._getLocation();\n    this._attemptCharCodeUntilFn(predicate);\n    if (this._index - start.offset < len) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n    }\n  }\n/**\n * @param {?} char\n * @return {?}\n */\nprivate _attemptUntilChar(char: number) {\n    while (this._peek !== char) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @return {?}\n */\nprivate _readChar(decodeEntities: boolean): string {\n    if (decodeEntities && this._peek === chars.$AMPERSAND) {\n      return this._decodeEntity();\n    } else {\n      const /** @type {?} */ index = this._index;\n      this._advance();\n      return this._input[index];\n    }\n  }\n/**\n * @return {?}\n */\nprivate _decodeEntity(): string {\n    const /** @type {?} */ start = this._getLocation();\n    this._advance();\n    if (this._attemptCharCode(chars.$HASH)) {\n      const /** @type {?} */ isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n      const /** @type {?} */ numberStart = this._getLocation().offset;\n      this._attemptCharCodeUntilFn(isDigitEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      this._advance();\n      const /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n      try {\n        const /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n        return String.fromCharCode(charCode);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n        throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n      }\n    } else {\n      const /** @type {?} */ startPosition = this._savePosition();\n      this._attemptCharCodeUntilFn(isNamedEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        this._restorePosition(startPosition);\n        return '&';\n      }\n      this._advance();\n      const /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n      const /** @type {?} */ char = NAMED_ENTITIES[name];\n      if (!char) {\n        throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n      }\n      return char;\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @param {?} firstCharOfEnd\n * @param {?} attemptEndRest\n * @return {?}\n */\nprivate _consumeRawText(\n      decodeEntities: boolean, firstCharOfEnd: number, attemptEndRest: () => boolean): Token {\n    let /** @type {?} */ tagCloseStart: ParseLocation;\n    const /** @type {?} */ textStart = this._getLocation();\n    this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n    const /** @type {?} */ parts: string[] = [];\n    while (true) {\n      tagCloseStart = this._getLocation();\n      if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n        break;\n      }\n      if (this._index > tagCloseStart.offset) {\n        // add the characters consumed by the previous if statement to the output\n        parts.push(this._input.substring(tagCloseStart.offset, this._index));\n      }\n      while (this._peek !== firstCharOfEnd) {\n        parts.push(this._readChar(decodeEntities));\n      }\n    }\n    return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeComment(start: ParseLocation) {\n    this._beginToken(TokenType.COMMENT_START, start);\n    this._requireCharCode(chars.$MINUS);\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$MINUS, () => this._attemptStr('->'));\n    this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeCdata(start: ParseLocation) {\n    this._beginToken(TokenType.CDATA_START, start);\n    this._requireStr('CDATA[');\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$RBRACKET, () => this._attemptStr(']>'));\n    this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeDocType(start: ParseLocation) {\n    this._beginToken(TokenType.DOC_TYPE, start);\n    this._attemptUntilChar(chars.$GT);\n    this._advance();\n    this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n  }\n/**\n * @return {?}\n */\nprivate _consumePrefixAndName(): string[] {\n    const /** @type {?} */ nameOrPrefixStart = this._index;\n    let /** @type {?} */ prefix: string = null;\n    while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n      this._advance();\n    }\n    let /** @type {?} */ nameStart: number;\n    if (this._peek === chars.$COLON) {\n      this._advance();\n      prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n      nameStart = this._index;\n    } else {\n      nameStart = nameOrPrefixStart;\n    }\n    this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n    const /** @type {?} */ name = this._input.substring(nameStart, this._index);\n    return [prefix, name];\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagOpen(start: ParseLocation) {\n    const /** @type {?} */ savedPos = this._savePosition();\n    let /** @type {?} */ tagName: string;\n    let /** @type {?} */ lowercaseTagName: string;\n    try {\n      if (!chars.isAsciiLetter(this._peek)) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      const /** @type {?} */ nameStart = this._index;\n      this._consumeTagOpenStart(start);\n      tagName = this._input.substring(nameStart, this._index);\n      lowercaseTagName = tagName.toLowerCase();\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n        this._consumeAttributeName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        if (this._attemptCharCode(chars.$EQ)) {\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._consumeAttributeValue();\n        }\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n      }\n      this._consumeTagOpenEnd();\n    } catch ( /** @type {?} */e) {\n      if (e instanceof _ControlFlowError) {\n        // When the start tag is invalid, assume we want a \"<\"\n        this._restorePosition(savedPos);\n        // Back to back text tokens are merged at the end\n        this._beginToken(TokenType.TEXT, start);\n        this._endToken(['<']);\n        return;\n      }\n\n      throw e;\n    }\n\n    const /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n\n    if (contentTokenType === TagContentType.RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, false);\n    } else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, true);\n    }\n  }\n/**\n * @param {?} lowercaseTagName\n * @param {?} decodeEntities\n * @return {?}\n */\nprivate _consumeRawTextWithTagClose(lowercaseTagName: string, decodeEntities: boolean) {\n    const /** @type {?} */ textToken = this._consumeRawText(decodeEntities, chars.$LT, () => {\n      if (!this._attemptCharCode(chars.$SLASH)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      if (!this._attemptStrCaseInsensitive(lowercaseTagName)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      return this._attemptCharCode(chars.$GT);\n    });\n    this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n    this._endToken([null, lowercaseTagName]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagOpenStart(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_OPEN_START, start);\n    const /** @type {?} */ parts = this._consumePrefixAndName();\n    this._endToken(parts);\n  }\n/**\n * @return {?}\n */\nprivate _consumeAttributeName() {\n    this._beginToken(TokenType.ATTR_NAME);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\nprivate _consumeAttributeValue() {\n    this._beginToken(TokenType.ATTR_VALUE);\n    let /** @type {?} */ value: string;\n    if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n      const /** @type {?} */ quoteChar = this._peek;\n      this._advance();\n      const /** @type {?} */ parts: string[] = [];\n      while (this._peek !== quoteChar) {\n        parts.push(this._readChar(true));\n      }\n      value = parts.join('');\n      this._advance();\n    } else {\n      const /** @type {?} */ valueStart = this._index;\n      this._requireCharCodeUntilFn(isNameEnd, 1);\n      value = this._input.substring(valueStart, this._index);\n    }\n    this._endToken([this._processCarriageReturns(value)]);\n  }\n/**\n * @return {?}\n */\nprivate _consumeTagOpenEnd() {\n    const /** @type {?} */ tokenType =\n        this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n    this._beginToken(tokenType);\n    this._requireCharCode(chars.$GT);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagClose(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_CLOSE, start);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    this._requireCharCode(chars.$GT);\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionFormStart() {\n    this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ condition = this._readUntil(chars.$COMMA);\n    this._endToken([condition], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ type = this._readUntil(chars.$COMMA);\n    this._endToken([type], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionCaseStart() {\n    this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n    const /** @type {?} */ value = this._readUntil(chars.$LBRACE).trim();\n    this._endToken([value], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionCaseEnd() {\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionFormEnd() {\n    this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\nprivate _consumeText() {\n    const /** @type {?} */ start = this._getLocation();\n    this._beginToken(TokenType.TEXT, start);\n    const /** @type {?} */ parts: string[] = [];\n\n    do {\n      if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n        parts.push(this._interpolationConfig.start);\n        this._inInterpolation = true;\n      } else if (\n          this._interpolationConfig && this._inInterpolation &&\n          this._attemptStr(this._interpolationConfig.end)) {\n        parts.push(this._interpolationConfig.end);\n        this._inInterpolation = false;\n      } else {\n        parts.push(this._readChar(true));\n      }\n    } while (!this._isTextEnd());\n\n    this._endToken([this._processCarriageReturns(parts.join(''))]);\n  }\n/**\n * @return {?}\n */\nprivate _isTextEnd(): boolean {\n    if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n      return true;\n    }\n\n    if (this._tokenizeIcu && !this._inInterpolation) {\n      if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n        // start of an expansion form\n        return true;\n      }\n\n      if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n        // end of and expansion case\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\nprivate _savePosition(): [number, number, number, number, number] {\n    return [this._peek, this._index, this._column, this._line, this.tokens.length];\n  }\n/**\n * @param {?} char\n * @return {?}\n */\nprivate _readUntil(char: number): string {\n    const /** @type {?} */ start = this._index;\n    this._attemptUntilChar(char);\n    return this._input.substring(start, this._index);\n  }\n/**\n * @param {?} position\n * @return {?}\n */\nprivate _restorePosition(position: [number, number, number, number, number]): void {\n    this._peek = position[0];\n    this._index = position[1];\n    this._column = position[2];\n    this._line = position[3];\n    const /** @type {?} */ nbTokens = position[4];\n    if (nbTokens < this.tokens.length) {\n      // remove any extra tokens\n      this.tokens = this.tokens.slice(0, nbTokens);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _isInExpansionCase(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_CASE_EXP_START;\n  }\n/**\n * @return {?}\n */\nprivate _isInExpansionForm(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_FORM_START;\n  }\n}\n\nfunction _Tokenizer_tsickle_Closure_declarations() {\n/** @type {?} */\n_Tokenizer.prototype._input;\n/** @type {?} */\n_Tokenizer.prototype._length;\n/** @type {?} */\n_Tokenizer.prototype._peek;\n/** @type {?} */\n_Tokenizer.prototype._nextPeek;\n/** @type {?} */\n_Tokenizer.prototype._index;\n/** @type {?} */\n_Tokenizer.prototype._line;\n/** @type {?} */\n_Tokenizer.prototype._column;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenStart;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenType;\n/** @type {?} */\n_Tokenizer.prototype._expansionCaseStack;\n/** @type {?} */\n_Tokenizer.prototype._inInterpolation;\n/** @type {?} */\n_Tokenizer.prototype.tokens;\n/** @type {?} */\n_Tokenizer.prototype.errors;\n/** @type {?} */\n_Tokenizer.prototype._file;\n/** @type {?} */\n_Tokenizer.prototype._getTagDefinition;\n/** @type {?} */\n_Tokenizer.prototype._tokenizeIcu;\n/** @type {?} */\n_Tokenizer.prototype._interpolationConfig;\n}\n\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code: number): boolean {\n  return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code: number): boolean {\n  return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n      code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code: number): boolean {\n  return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n      (code < chars.$0 || code > chars.$9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(\n    input: string, offset: number, interpolationConfig: InterpolationConfig): boolean {\n  const /** @type {?} */ isInterpolationStart =\n      interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n\n  return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek: number): boolean {\n  return peek === chars.$EQ || chars.isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1: number, code2: number): boolean {\n  return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code: number): number {\n  return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens: Token[]): Token[] {\n  const /** @type {?} */ dstTokens: Token[] = [];\n  let /** @type {?} */ lastDstToken: Token;\n  for (let /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n    const /** @type {?} */ token = srcTokens[i];\n    if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n      lastDstToken.parts[0] += token.parts[0];\n      lastDstToken.sourceSpan.end = token.sourceSpan.end;\n    } else {\n      lastDstToken = token;\n      dstTokens.push(lastDstToken);\n    }\n  }\n\n  return dstTokens;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}