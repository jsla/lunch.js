{"version":3,"file":"icu_ast_expander.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/icu_ast_expander.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\n\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nconst /** @type {?} */ PLURAL_CASES: string[] = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n * \n * For example,\n * \n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n * \n * will be expanded into\n * \n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <template ngPluralCase=\"=0\">zero</template>\n *   <template ngPluralCase=\"=1\">one</template>\n *   <template ngPluralCase=\"other\">more than one</template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nexport function expandNodes(nodes: html.Node[]): ExpansionResult {\n  const /** @type {?} */ expander = new _Expander();\n  return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nexport class ExpansionResult {\n/**\n * @param {?} nodes\n * @param {?} expanded\n * @param {?} errors\n */\nconstructor(public nodes: html.Node[],\npublic expanded: boolean,\npublic errors: ParseError[]) {}\n}\n\nfunction ExpansionResult_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionResult.prototype.nodes;\n/** @type {?} */\nExpansionResult.prototype.expanded;\n/** @type {?} */\nExpansionResult.prototype.errors;\n}\n\nexport class ExpansionError extends ParseError {\n/**\n * @param {?} span\n * @param {?} errorMsg\n */\nconstructor(span: ParseSourceSpan, errorMsg: string) { super(span, errorMsg); }\n}\n/**\n * Expand expansion forms (plural, select) to directives\n * \n * \\@internal\n */\nclass _Expander implements html.Visitor {\n  isExpanded: boolean = false;\n  errors: ParseError[] = [];\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: html.Element, context: any): any {\n    return new html.Element(\n        element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan,\n        element.startSourceSpan, element.endSourceSpan);\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any { return attribute; }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: html.Text, context: any): any { return text; }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return comment; }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: html.Expansion, context: any): any {\n    this.isExpanded = true;\n    return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n                                  _expandDefaultForm(icu, this.errors);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    throw new Error('Should not be reached');\n  }\n}\n\nfunction _Expander_tsickle_Closure_declarations() {\n/** @type {?} */\n_Expander.prototype.isExpanded;\n/** @type {?} */\n_Expander.prototype.errors;\n}\n\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const /** @type {?} */ children = ast.cases.map(c => {\n    if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n      errors.push(new ExpansionError(\n          c.valueSourceSpan,\n          `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n    }\n\n    const /** @type {?} */ expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    return new html.Element(\n        `template`, [new html.Attribute('ngPluralCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const /** @type {?} */ switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const /** @type {?} */ children = ast.cases.map(c => {\n    const /** @type {?} */ expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    if (c.value === 'other') {\n      // other is the default case when no values match\n      return new html.Element(\n          `template`, [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)],\n          expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    }\n\n    return new html.Element(\n        `template`, [new html.Attribute('ngSwitchCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const /** @type {?} */ switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}