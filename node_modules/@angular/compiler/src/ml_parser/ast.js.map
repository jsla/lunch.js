{"version":3,"file":"ast.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context: any): any;\n}\nexport class Text implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitText(this, context); }\n}\n\nfunction Text_tsickle_Closure_declarations() {\n/** @type {?} */\nText.prototype.value;\n/** @type {?} */\nText.prototype.sourceSpan;\n}\n\nexport class Expansion implements Node {\n/**\n * @param {?} switchValue\n * @param {?} type\n * @param {?} cases\n * @param {?} sourceSpan\n * @param {?} switchValueSourceSpan\n */\nconstructor(\npublic switchValue: string,\npublic type: string,\npublic cases: ExpansionCase[],\npublic sourceSpan: ParseSourceSpan,\npublic switchValueSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitExpansion(this, context); }\n}\n\nfunction Expansion_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansion.prototype.switchValue;\n/** @type {?} */\nExpansion.prototype.type;\n/** @type {?} */\nExpansion.prototype.cases;\n/** @type {?} */\nExpansion.prototype.sourceSpan;\n/** @type {?} */\nExpansion.prototype.switchValueSourceSpan;\n}\n\nexport class ExpansionCase implements Node {\n/**\n * @param {?} value\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} valueSourceSpan\n * @param {?} expSourceSpan\n */\nconstructor(\npublic value: string,\npublic expression: Node[],\npublic sourceSpan: ParseSourceSpan,\npublic valueSourceSpan: ParseSourceSpan,\npublic expSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitExpansionCase(this, context); }\n}\n\nfunction ExpansionCase_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionCase.prototype.value;\n/** @type {?} */\nExpansionCase.prototype.expression;\n/** @type {?} */\nExpansionCase.prototype.sourceSpan;\n/** @type {?} */\nExpansionCase.prototype.valueSourceSpan;\n/** @type {?} */\nExpansionCase.prototype.expSourceSpan;\n}\n\nexport class Attribute implements Node {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?=} valueSpan\n */\nconstructor(\npublic name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan,\npublic valueSpan?: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitAttribute(this, context); }\n}\n\nfunction Attribute_tsickle_Closure_declarations() {\n/** @type {?} */\nAttribute.prototype.name;\n/** @type {?} */\nAttribute.prototype.value;\n/** @type {?} */\nAttribute.prototype.sourceSpan;\n/** @type {?} */\nAttribute.prototype.valueSpan;\n}\n\nexport class Element implements Node {\n/**\n * @param {?} name\n * @param {?} attrs\n * @param {?} children\n * @param {?} sourceSpan\n * @param {?} startSourceSpan\n * @param {?} endSourceSpan\n */\nconstructor(\npublic name: string,\npublic attrs: Attribute[],\npublic children: Node[],\npublic sourceSpan: ParseSourceSpan,\npublic startSourceSpan: ParseSourceSpan,\npublic endSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitElement(this, context); }\n}\n\nfunction Element_tsickle_Closure_declarations() {\n/** @type {?} */\nElement.prototype.name;\n/** @type {?} */\nElement.prototype.attrs;\n/** @type {?} */\nElement.prototype.children;\n/** @type {?} */\nElement.prototype.sourceSpan;\n/** @type {?} */\nElement.prototype.startSourceSpan;\n/** @type {?} */\nElement.prototype.endSourceSpan;\n}\n\nexport class Comment implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitComment(this, context); }\n}\n\nfunction Comment_tsickle_Closure_declarations() {\n/** @type {?} */\nComment.prototype.value;\n/** @type {?} */\nComment.prototype.sourceSpan;\n}\n\n\nexport interface Visitor {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node, context: any): any;\n\n  visitElement(element: Element, context: any): any;\n  visitAttribute(attribute: Attribute, context: any): any;\n  visitText(text: Text, context: any): any;\n  visitComment(comment: Comment, context: any): any;\n  visitExpansion(expansion: Expansion, context: any): any;\n  visitExpansionCase(expansionCase: ExpansionCase, context: any): any;\n}\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nexport function visitAll(visitor: Visitor, nodes: Node[], context: any = null): any[] {\n  const /** @type {?} */ result: any[] = [];\n\n  const /** @type {?} */ visit = visitor.visit ?\n      (ast: Node) => visitor.visit(ast, context) || ast.visit(visitor, context) :\n      (ast: Node) => ast.visit(visitor, context);\n  nodes.forEach(ast => {\n    const /** @type {?} */ astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}