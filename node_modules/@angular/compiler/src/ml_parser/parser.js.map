{"version":3,"file":"parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isBlank, isPresent} from '../facade/lang';\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, mergeNsAndName} from './tags';\nexport class TreeError extends ParseError {\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n * @return {?}\n */\nstatic create(elementName: string, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n */\nconstructor(public elementName: string, span: ParseSourceSpan, msg: string) { super(span, msg); }\n}\n\nfunction TreeError_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeError.prototype.elementName;\n}\n\nexport class ParseTreeResult {\n/**\n * @param {?} rootNodes\n * @param {?} errors\n */\nconstructor(public rootNodes: html.Node[],\npublic errors: ParseError[]) {}\n}\n\nfunction ParseTreeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nParseTreeResult.prototype.rootNodes;\n/** @type {?} */\nParseTreeResult.prototype.errors;\n}\n\nexport class Parser {\n/**\n * @param {?} getTagDefinition\n */\nconstructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ tokensAndErrors =\n        lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\n    const /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        ( /** @type {?} */((<ParseError[]>tokensAndErrors.errors))).concat(treeAndErrors.errors));\n  }\n}\n\nfunction Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nParser.prototype.getTagDefinition;\n}\n\nclass _TreeBuilder {\nprivate _index: number = -1;\nprivate _peek: lex.Token;\nprivate _rootNodes: html.Node[] = [];\nprivate _errors: TreeError[] = [];\nprivate _elementStack: html.Element[] = [];\n/**\n * @param {?} tokens\n * @param {?} getTagDefinition\n */\nconstructor(\nprivate tokens: lex.Token[],\nprivate getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n/**\n * @return {?}\n */\nbuild(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n/**\n * @return {?}\n */\nprivate _advance(): lex.Token {\n    const /** @type {?} */ prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _advanceIf(type: lex.TokenType): lex.Token {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n/**\n * @param {?} startToken\n * @return {?}\n */\nprivate _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeComment(token: lex.Token) {\n    const /** @type {?} */ text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const /** @type {?} */ value = isPresent(text) ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeExpansion(token: lex.Token) {\n    const /** @type {?} */ switchValue = this._advance();\n\n    const /** @type {?} */ type = this._advance();\n    const /** @type {?} */ cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const /** @type {?} */ expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n/**\n * @return {?}\n */\nprivate _parseExpansionCase(): html.ExpansionCase {\n    const /** @type {?} */ value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const /** @type {?} */ start = this._advance();\n\n    const /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const /** @type {?} */ end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat( /** @type {?} */((<TreeError[]>parsedExp.errors)));\n      return null;\n    }\n\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _collectExpansionExpTokens(start: lex.Token): lex.Token[] {\n    const /** @type {?} */ exp: lex.Token[] = [];\n    const /** @type {?} */ expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeText(token: lex.Token) {\n    let /** @type {?} */ text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const /** @type {?} */ parent = this._getParentElement();\n      if (isPresent(parent) && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n/**\n * @return {?}\n */\nprivate _closeVoidElement(): void {\n    if (this._elementStack.length > 0) {\n      const /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n\n      if (this.getTagDefinition(el.name).isVoid) {\n        this._elementStack.pop();\n      }\n    }\n  }\n/**\n * @param {?} startTagToken\n * @return {?}\n */\nprivate _consumeStartTag(startTagToken: lex.Token) {\n    const /** @type {?} */ prefix = startTagToken.parts[0];\n    const /** @type {?} */ name = startTagToken.parts[1];\n    const /** @type {?} */ attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let /** @type {?} */ selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const /** @type {?} */ end = this._peek.sourceSpan.start;\n    const /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const /** @type {?} */ el = new html.Element(fullName, attrs, [], span, span, null);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nprivate _pushElement(el: html.Element) {\n    if (this._elementStack.length > 0) {\n      const /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n      if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n        this._elementStack.pop();\n      }\n    }\n\n    const /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n    const {parent, container} = this._getParentElementSkippingContainers();\n\n    if (parent && tagDef.requireExtraParent(parent.name)) {\n      const /** @type {?} */ newParent = new html.Element(\n          tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n      this._insertBeforeContainer(parent, container, newParent);\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n/**\n * @param {?} endTagToken\n * @return {?}\n */\nprivate _consumeEndTag(endTagToken: lex.Token) {\n    const /** @type {?} */ fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) {\n      this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan, `Unexpected closing tag \"${endTagToken.parts[1]}\"`));\n    }\n  }\n/**\n * @param {?} fullName\n * @return {?}\n */\nprivate _popElement(fullName: string): boolean {\n    for (let /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const /** @type {?} */ el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _consumeAttr(attrName: lex.Token): html.Attribute {\n    const /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let /** @type {?} */ end = attrName.sourceSpan.end;\n    let /** @type {?} */ value = '';\n    let /** @type {?} */ valueSpan: ParseSourceSpan;\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const /** @type {?} */ valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n/**\n * @return {?}\n */\nprivate _getParentElement(): html.Element {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n/**\n * Returns the parent in the DOM and the container.\n * \n * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n * @return {?}\n */\nprivate _getParentElementSkippingContainers(): {parent: html.Element, container: html.Element} {\n    let /** @type {?} */ container: html.Element = null;\n\n    for (let /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n      if (this._elementStack[i].name !== 'ng-container') {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: this._elementStack[this._elementStack.length - 1], container};\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate _addToParent(node: html.Node) {\n    const /** @type {?} */ parent = this._getParentElement();\n    if (isPresent(parent)) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n/**\n * Insert a node between the parent and the container.\n * When no container is given, the node is appended as a child of the parent.\n * Also updates the element stack accordingly.\n * \n * \\@internal\n * @param {?} parent\n * @param {?} container\n * @param {?} node\n * @return {?}\n */\nprivate _insertBeforeContainer(\n      parent: html.Element, container: html.Element, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const /** @type {?} */ index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n/**\n * @param {?} prefix\n * @param {?} localName\n * @param {?} parentElement\n * @return {?}\n */\nprivate _getElementFullName(prefix: string, localName: string, parentElement: html.Element):\n      string {\n    if (isBlank(prefix)) {\n      prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n      if (isBlank(prefix) && isPresent(parentElement)) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction _TreeBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\n_TreeBuilder.prototype._index;\n/** @type {?} */\n_TreeBuilder.prototype._peek;\n/** @type {?} */\n_TreeBuilder.prototype._rootNodes;\n/** @type {?} */\n_TreeBuilder.prototype._errors;\n/** @type {?} */\n_TreeBuilder.prototype._elementStack;\n/** @type {?} */\n_TreeBuilder.prototype.tokens;\n/** @type {?} */\n_TreeBuilder.prototype.getTagDefinition;\n}\n\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}