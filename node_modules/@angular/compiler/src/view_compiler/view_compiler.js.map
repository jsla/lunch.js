{"version":3,"file":"view_compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_compiler.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;;;;OAII,EAAC,cAAc,EAAC,MAAM,WAAW;OACjC,EAAC,kBAAkB,EAAC,MAAM,eAAe;OAEzC,EAAC,qBAAqB,EAAC,MAAM,mCAAmC;OAGhE,EAAC,cAAc,EAAC,MAAM,mBAAmB;OACzC,EAAC,WAAW,EAAC,MAAM,gBAAgB;OAEnC,EAAC,QAAQ,EAAC,MAAM,eAAe;OAC/B,EAAC,SAAS,EAAE,UAAU,EAAC,MAAM,gBAAgB;AAEpD,SAAQ,0BAA0B,EAAE,0BAA0B,EAAE,mBAAmB,QAAO,QAAQ,CAAC;AACnG;IACA;;;;OAIG;IACH,2BACO,UAAyB,EACzB,YAAoB,EACpB,YACmF;QAHnF,eAAU,GAAV,UAAU,CAAe;QACzB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,iBAAY,GAAZ,YAAY,CACuE;IAAG,CAAC;IAC9F,wBAAC;AAAD,CAAC,AAXD,IAWC;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC;IACvC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,YAAY,CAAC;IACzC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,YAAY,CAAC;AACzC,CAAC;AAGD;IACA;;;OAGG;IACH,sBAAoB,UAA0B,EACtC,eAAsC;QAD1B,eAAU,GAAV,UAAU,CAAgB;QACtC,oBAAe,GAAf,eAAe,CAAuB;IAAG,CAAC;IAClD;;;;;;;OAOG;IACH,uCAAgB,GAAhB,UACM,SAAmC,EAAE,QAAuB,EAAE,MAAoB,EAClF,KAA2B,EAC3B,kBAAiD;QACnD,IAAM,gBAAgB,CAAC,YAAY,GACoD,EAAE,CAAC;QAC1F,IAAM,gBAAgB,CAAC,IAAI,GAAG,IAAI,WAAW,CACzC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,EAChE,cAAc,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;QAEnD,IAAM,gBAAgB,CAAC,UAAU,GAAkB,EAAE,CAAC;QACtD,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QACxC,gEAAgE;QAChE,iDAAiD;QACjD,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/C,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE7B,MAAM,CAAC,IAAI,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC9E,CAAC;IAlCH;QAAC,kBAAkB,EAAE;;oBAAA;IAmCrB,mBAAC;AAAD,CAAC,AAlCD,IAkCC;AAED;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC;IAClC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC;AACvC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDirectiveMetadata, CompilePipeSummary} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {CompilerInjectable} from '../injectable';\nimport * as o from '../output/output_ast';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {TemplateAst} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency} from './deps';\nimport {bindView} from './view_binder';\nimport {buildView, finishView} from './view_builder';\n\nexport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency} from './deps';\nexport class ViewCompileResult {\n/**\n * @param {?} statements\n * @param {?} viewClassVar\n * @param {?} dependencies\n */\nconstructor(\npublic statements: o.Statement[],\npublic viewClassVar: string,\npublic dependencies:\n          Array<ViewClassDependency|ComponentFactoryDependency|DirectiveWrapperDependency>) {}\n}\n\nfunction ViewCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompileResult.prototype.statements;\n/** @type {?} */\nViewCompileResult.prototype.viewClassVar;\n/** @type {?} */\nViewCompileResult.prototype.dependencies;\n}\n\n@CompilerInjectable()\nexport class ViewCompiler {\n/**\n * @param {?} _genConfig\n * @param {?} _schemaRegistry\n */\nconstructor(private _genConfig: CompilerConfig,\nprivate _schemaRegistry: ElementSchemaRegistry) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} styles\n * @param {?} pipes\n * @param {?} compiledAnimations\n * @return {?}\n */\ncompileComponent(\n      component: CompileDirectiveMetadata, template: TemplateAst[], styles: o.Expression,\n      pipes: CompilePipeSummary[],\n      compiledAnimations: AnimationEntryCompileResult[]): ViewCompileResult {\n    const /** @type {?} */ dependencies:\n        Array<ViewClassDependency|ComponentFactoryDependency|DirectiveWrapperDependency> = [];\n    const /** @type {?} */ view = new CompileView(\n        component, this._genConfig, pipes, styles, compiledAnimations, 0,\n        CompileElement.createNull(), [], dependencies);\n\n    const /** @type {?} */ statements: o.Statement[] = [];\n    buildView(view, template, dependencies);\n    // Need to separate binding from creation to be able to refer to\n    // variables that have been declared after usage.\n    bindView(view, template, this._schemaRegistry);\n    finishView(view, statements);\n\n    return new ViewCompileResult(statements, view.classExpr.name, dependencies);\n  }\n}\n\nfunction ViewCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompiler.prototype._genConfig;\n/** @type {?} */\nViewCompiler.prototype._schemaRegistry;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}