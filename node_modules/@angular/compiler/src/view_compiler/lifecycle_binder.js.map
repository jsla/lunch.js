{"version":3,"file":"lifecycle_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/lifecycle_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveSummary, CompilePipeSummary} from '../compile_metadata';\nimport {DirectiveWrapperExpressions} from '../directive_wrapper_compiler';\nimport * as o from '../output/output_ast';\nimport {LifecycleHooks} from '../private_import_core';\nimport {DirectiveAst, ProviderAst, ProviderAstType} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {DetectChangesVars} from './constants';\n\nconst /** @type {?} */ STATE_IS_NEVER_CHECKED = o.THIS_EXPR.prop('numberOfChecks').identical(new o.LiteralExpr(0));\nconst /** @type {?} */ NOT_THROW_ON_CHANGES = o.not(DetectChangesVars.throwOnChange);\n/**\n * @param {?} directiveMeta\n * @param {?} directiveInstance\n * @param {?} compileElement\n * @return {?}\n */\nexport function bindDirectiveAfterContentLifecycleCallbacks(\n    directiveMeta: CompileDirectiveSummary, directiveInstance: o.Expression,\n    compileElement: CompileElement) {\n  const /** @type {?} */ view = compileElement.view;\n  const /** @type {?} */ lifecycleHooks = directiveMeta.type.lifecycleHooks;\n  const /** @type {?} */ afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n  afterContentLifecycleCallbacksMethod.resetDebugInfo(\n      compileElement.nodeIndex, compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n  }\n}\n/**\n * @param {?} directiveMeta\n * @param {?} directiveInstance\n * @param {?} compileElement\n * @return {?}\n */\nexport function bindDirectiveAfterViewLifecycleCallbacks(\n    directiveMeta: CompileDirectiveSummary, directiveInstance: o.Expression,\n    compileElement: CompileElement) {\n  const /** @type {?} */ view = compileElement.view;\n  const /** @type {?} */ lifecycleHooks = directiveMeta.type.lifecycleHooks;\n  const /** @type {?} */ afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n  afterViewLifecycleCallbacksMethod.resetDebugInfo(\n      compileElement.nodeIndex, compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n  }\n}\n/**\n * @param {?} dir\n * @param {?} directiveWrapperIntance\n * @param {?} compileElement\n * @return {?}\n */\nexport function bindDirectiveWrapperLifecycleCallbacks(\n    dir: DirectiveAst, directiveWrapperIntance: o.Expression, compileElement: CompileElement) {\n  compileElement.view.destroyMethod.addStmts(\n      DirectiveWrapperExpressions.ngOnDestroy(dir.directive, directiveWrapperIntance));\n  compileElement.view.detachMethod.addStmts(DirectiveWrapperExpressions.ngOnDetach(\n      dir.hostProperties, directiveWrapperIntance, o.THIS_EXPR,\n      compileElement.compViewExpr || o.THIS_EXPR, compileElement.renderNode));\n}\n/**\n * @param {?} provider\n * @param {?} providerInstance\n * @param {?} compileElement\n * @return {?}\n */\nexport function bindInjectableDestroyLifecycleCallbacks(\n    provider: ProviderAst, providerInstance: o.Expression, compileElement: CompileElement) {\n  const /** @type {?} */ onDestroyMethod = compileElement.view.destroyMethod;\n  onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n  if (provider.providerType !== ProviderAstType.Directive &&\n      provider.providerType !== ProviderAstType.Component &&\n      provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n/**\n * @param {?} pipeMeta\n * @param {?} pipeInstance\n * @param {?} view\n * @return {?}\n */\nexport function bindPipeDestroyLifecycleCallbacks(\n    pipeMeta: CompilePipeSummary, pipeInstance: o.Expression, view: CompileView) {\n  const /** @type {?} */ onDestroyMethod = view.destroyMethod;\n  if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}