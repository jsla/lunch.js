{"version":3,"file":"event_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/event_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventHandlerVars, convertActionBinding} from '../compiler_util/expression_converter';\nimport {createInlineArray} from '../compiler_util/identifier_util';\nimport {DirectiveWrapperExpressions} from '../directive_wrapper_compiler';\nimport {Identifiers, createIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {BoundEventAst, DirectiveAst} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {getHandleEventMethodName} from './util';\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @param {?} compileElement\n * @param {?} bindToRenderer\n * @return {?}\n */\nexport function bindOutputs(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[], compileElement: CompileElement,\n    bindToRenderer: boolean): boolean {\n  const /** @type {?} */ usedEvents = collectEvents(boundEvents, directives);\n  if (!usedEvents.size) {\n    return false;\n  }\n  if (bindToRenderer) {\n    subscribeToRenderEvents(usedEvents, compileElement);\n  }\n  subscribeToDirectiveEvents(usedEvents, directives, compileElement);\n  generateHandleEventMethod(boundEvents, directives, compileElement);\n  return true;\n}\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @return {?}\n */\nfunction collectEvents(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[]): Map<string, EventSummary> {\n  const /** @type {?} */ usedEvents = new Map<string, EventSummary>();\n  boundEvents.forEach((event) => { usedEvents.set(event.fullName, event); });\n  directives.forEach((dirAst) => {\n    dirAst.hostEvents.forEach((event) => { usedEvents.set(event.fullName, event); });\n  });\n  return usedEvents;\n}\n/**\n * @param {?} usedEvents\n * @param {?} compileElement\n * @return {?}\n */\nfunction subscribeToRenderEvents(\n    usedEvents: Map<string, EventSummary>, compileElement: CompileElement) {\n  const /** @type {?} */ eventAndTargetExprs: o.Expression[] = [];\n  usedEvents.forEach((event) => {\n    if (!event.phase) {\n      eventAndTargetExprs.push(o.literal(event.name), o.literal(event.target));\n    }\n  });\n  if (eventAndTargetExprs.length) {\n    const /** @type {?} */ disposableVar = o.variable(`disposable_${compileElement.view.disposables.length}`);\n    compileElement.view.disposables.push(disposableVar);\n    compileElement.view.createMethod.addStmt(\n        disposableVar\n            .set(o.importExpr(createIdentifier(Identifiers.subscribeToRenderElement)).callFn([\n              o.THIS_EXPR, compileElement.renderNode, createInlineArray(eventAndTargetExprs),\n              handleEventExpr(compileElement)\n            ]))\n            .toDeclStmt(o.FUNCTION_TYPE, [o.StmtModifier.Private]));\n  }\n}\n/**\n * @param {?} usedEvents\n * @param {?} directives\n * @param {?} compileElement\n * @return {?}\n */\nfunction subscribeToDirectiveEvents(\n    usedEvents: Map<string, EventSummary>, directives: DirectiveAst[],\n    compileElement: CompileElement) {\n  const /** @type {?} */ usedEventNames = Array.from(usedEvents.keys());\n  directives.forEach((dirAst) => {\n    const /** @type {?} */ dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n    compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(\n        dirAst.directive, dirAst.hostProperties, usedEventNames, dirWrapper, o.THIS_EXPR,\n        handleEventExpr(compileElement)));\n  });\n}\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @param {?} compileElement\n * @return {?}\n */\nfunction generateHandleEventMethod(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[], compileElement: CompileElement) {\n  const /** @type {?} */ hasComponentHostListener =\n      directives.some((dirAst) => dirAst.hostEvents.some((event) => dirAst.directive.isComponent));\n\n  const /** @type {?} */ markPathToRootStart = hasComponentHostListener ? compileElement.compViewExpr : o.THIS_EXPR;\n  const /** @type {?} */ handleEventStmts = new CompileMethod(compileElement.view);\n  handleEventStmts.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n  handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt());\n  const /** @type {?} */ eventNameVar = o.variable('eventName');\n  const /** @type {?} */ resultVar = o.variable('result');\n  handleEventStmts.push(resultVar.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE));\n\n  directives.forEach((dirAst, dirIdx) => {\n    const /** @type {?} */ dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n    if (dirAst.hostEvents.length > 0) {\n      handleEventStmts.push(\n          resultVar\n              .set(DirectiveWrapperExpressions\n                       .handleEvent(\n                           dirAst.hostEvents, dirWrapper, eventNameVar, EventHandlerVars.event)\n                       .and(resultVar))\n              .toStmt());\n    }\n  });\n  boundEvents.forEach((renderEvent, renderEventIdx) => {\n    const /** @type {?} */ evalResult = convertActionBinding(\n        compileElement.view, compileElement.view, compileElement.view.componentContext,\n        renderEvent.handler, `sub_${renderEventIdx}`);\n    const /** @type {?} */ trueStmts = evalResult.stmts;\n    if (evalResult.preventDefault) {\n      trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n    }\n    // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n    handleEventStmts.push(\n        new o.IfStmt(eventNameVar.equals(o.literal(renderEvent.fullName)), trueStmts));\n  });\n\n  handleEventStmts.push(new o.ReturnStatement(resultVar));\n  compileElement.view.methods.push(new o.ClassMethod(\n      getHandleEventMethodName(compileElement.nodeIndex),\n      [\n        new o.FnParam(eventNameVar.name, o.STRING_TYPE),\n        new o.FnParam(EventHandlerVars.event.name, o.DYNAMIC_TYPE)\n      ],\n      handleEventStmts.finish(), o.BOOL_TYPE));\n}\n/**\n * @param {?} compileElement\n * @return {?}\n */\nfunction handleEventExpr(compileElement: CompileElement) {\n  const /** @type {?} */ handleEventMethodName = getHandleEventMethodName(compileElement.nodeIndex);\n  return o.THIS_EXPR.callMethod('eventHandler', [o.THIS_EXPR.prop(handleEventMethodName)]);\n}\n\ntype EventSummary = {\n  name: string,\n  target: string,\n  phase: string\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}