{"version":3,"file":"compile_view.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_view.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompilePipeSummary, tokenName} from '../compile_metadata';\nimport {EventHandlerVars, NameResolver} from '../compiler_util/expression_converter';\nimport {createPureProxy} from '../compiler_util/identifier_util';\nimport {CompilerConfig} from '../config';\nimport {isPresent} from '../facade/lang';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\n\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompilePipe} from './compile_pipe';\nimport {CompileQuery, addQueryToTokenMap, createQueryList} from './compile_query';\nimport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency} from './deps';\nimport {getPropertyInView, getViewClassName} from './util';\nexport type CompileViewRootNodeType = number;\nexport let CompileViewRootNodeType: any = {};\nCompileViewRootNodeType.Node = 0;\nCompileViewRootNodeType.ViewContainer = 1;\nCompileViewRootNodeType.NgContent = 2;\nCompileViewRootNodeType[CompileViewRootNodeType.Node] = \"Node\";\nCompileViewRootNodeType[CompileViewRootNodeType.ViewContainer] = \"ViewContainer\";\nCompileViewRootNodeType[CompileViewRootNodeType.NgContent] = \"NgContent\";\n\nexport class CompileViewRootNode {\n/**\n * @param {?} type\n * @param {?} expr\n * @param {?=} ngContentIndex\n */\nconstructor(\npublic type: CompileViewRootNodeType,\npublic expr: o.Expression,\npublic ngContentIndex?: number) {}\n}\n\nfunction CompileViewRootNode_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileViewRootNode.prototype.type;\n/** @type {?} */\nCompileViewRootNode.prototype.expr;\n/** @type {?} */\nCompileViewRootNode.prototype.ngContentIndex;\n}\n\nexport class CompileView implements NameResolver {\npublic viewType: ViewType;\npublic viewQueries: Map<any, CompileQuery[]>;\npublic viewChildren: o.Expression[] = [];\npublic nodes: CompileNode[] = [];\npublic rootNodes: CompileViewRootNode[] = [];\npublic lastRenderNode: o.Expression = o.NULL_EXPR;\npublic viewContainers: o.Expression[] = [];\npublic createMethod: CompileMethod;\npublic animationBindingsMethod: CompileMethod;\npublic injectorGetMethod: CompileMethod;\npublic updateContentQueriesMethod: CompileMethod;\npublic dirtyParentQueriesMethod: CompileMethod;\npublic updateViewQueriesMethod: CompileMethod;\npublic detectChangesInInputsMethod: CompileMethod;\npublic detectChangesRenderPropertiesMethod: CompileMethod;\npublic afterContentLifecycleCallbacksMethod: CompileMethod;\npublic afterViewLifecycleCallbacksMethod: CompileMethod;\npublic destroyMethod: CompileMethod;\npublic detachMethod: CompileMethod;\npublic methods: o.ClassMethod[] = [];\npublic ctorStmts: o.Statement[] = [];\npublic fields: o.ClassField[] = [];\npublic getters: o.ClassGetter[] = [];\npublic disposables: o.Expression[] = [];\npublic componentView: CompileView;\npublic purePipes = new Map<string, CompilePipe>();\npublic pipes: CompilePipe[] = [];\npublic locals = new Map<string, o.Expression>();\npublic className: string;\npublic classType: o.Type;\npublic classExpr: o.ReadVarExpr;\npublic literalArrayCount = 0;\npublic literalMapCount = 0;\npublic pipeCount = 0;\npublic componentContext: o.Expression;\n/**\n * @param {?} component\n * @param {?} genConfig\n * @param {?} pipeMetas\n * @param {?} styles\n * @param {?} animations\n * @param {?} viewIndex\n * @param {?} declarationElement\n * @param {?} templateVariableBindings\n * @param {?} targetDependencies\n */\nconstructor(\npublic component: CompileDirectiveMetadata,\npublic genConfig: CompilerConfig,\npublic pipeMetas: CompilePipeSummary[],\npublic styles: o.Expression,\npublic animations: AnimationEntryCompileResult[],\npublic viewIndex: number,\npublic declarationElement: CompileElement,\npublic templateVariableBindings: string[][],\npublic targetDependencies:\n          Array<ViewClassDependency|ComponentFactoryDependency|DirectiveWrapperDependency>) {\n    this.createMethod = new CompileMethod(this);\n    this.animationBindingsMethod = new CompileMethod(this);\n    this.injectorGetMethod = new CompileMethod(this);\n    this.updateContentQueriesMethod = new CompileMethod(this);\n    this.dirtyParentQueriesMethod = new CompileMethod(this);\n    this.updateViewQueriesMethod = new CompileMethod(this);\n    this.detectChangesInInputsMethod = new CompileMethod(this);\n    this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\n    this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n    this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n    this.destroyMethod = new CompileMethod(this);\n    this.detachMethod = new CompileMethod(this);\n\n    this.viewType = getViewType(component, viewIndex);\n    this.className = getViewClassName(component, viewIndex);\n    this.classType = o.expressionType(o.variable(this.className));\n    this.classExpr = o.variable(this.className);\n    if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n      this.componentView = this;\n    } else {\n      this.componentView = this.declarationElement.view.componentView;\n    }\n    this.componentContext =\n        getPropertyInView(o.THIS_EXPR.prop('context'), this, this.componentView);\n\n    const viewQueries = new Map<any, CompileQuery[]>();\n    if (this.viewType === ViewType.COMPONENT) {\n      const directiveInstance = o.THIS_EXPR.prop('context');\n      this.component.viewQueries.forEach((queryMeta, queryIndex) => {\n        const propName = `_viewQuery_${tokenName(queryMeta.selectors[0])}_${queryIndex}`;\n        const queryList = createQueryList(propName, this);\n        const query = new CompileQuery(queryMeta, queryList, directiveInstance, this);\n        addQueryToTokenMap(viewQueries, query);\n      });\n    }\n    this.viewQueries = viewQueries;\n    templateVariableBindings.forEach(\n        (entry) => { this.locals.set(entry[1], o.THIS_EXPR.prop('context').prop(entry[0])); });\n\n    if (!this.declarationElement.isNull()) {\n      this.declarationElement.setEmbeddedView(this);\n    }\n  }\n/**\n * @param {?} name\n * @param {?} input\n * @param {?} args\n * @return {?}\n */\ncallPipe(name: string, input: o.Expression, args: o.Expression[]): o.Expression {\n    return CompilePipe.call(this, name, [input].concat(args));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let /** @type {?} */ currView: CompileView = this;\n    let /** @type {?} */ result = currView.locals.get(name);\n    while (!result && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      result = currView.locals.get(name);\n    }\n    if (isPresent(result)) {\n      return getPropertyInView(result, this, currView);\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nfinish() {\n    Array.from(this.viewQueries.values())\n        .forEach(\n            queries => queries.forEach(\n                q => q.generateStatements(this.createMethod, this.updateViewQueriesMethod)));\n  }\n}\n\nfunction CompileView_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileView.prototype.viewType;\n/** @type {?} */\nCompileView.prototype.viewQueries;\n/** @type {?} */\nCompileView.prototype.viewChildren;\n/** @type {?} */\nCompileView.prototype.nodes;\n/** @type {?} */\nCompileView.prototype.rootNodes;\n/** @type {?} */\nCompileView.prototype.lastRenderNode;\n/** @type {?} */\nCompileView.prototype.viewContainers;\n/** @type {?} */\nCompileView.prototype.createMethod;\n/** @type {?} */\nCompileView.prototype.animationBindingsMethod;\n/** @type {?} */\nCompileView.prototype.injectorGetMethod;\n/** @type {?} */\nCompileView.prototype.updateContentQueriesMethod;\n/** @type {?} */\nCompileView.prototype.dirtyParentQueriesMethod;\n/** @type {?} */\nCompileView.prototype.updateViewQueriesMethod;\n/** @type {?} */\nCompileView.prototype.detectChangesInInputsMethod;\n/** @type {?} */\nCompileView.prototype.detectChangesRenderPropertiesMethod;\n/** @type {?} */\nCompileView.prototype.afterContentLifecycleCallbacksMethod;\n/** @type {?} */\nCompileView.prototype.afterViewLifecycleCallbacksMethod;\n/** @type {?} */\nCompileView.prototype.destroyMethod;\n/** @type {?} */\nCompileView.prototype.detachMethod;\n/** @type {?} */\nCompileView.prototype.methods;\n/** @type {?} */\nCompileView.prototype.ctorStmts;\n/** @type {?} */\nCompileView.prototype.fields;\n/** @type {?} */\nCompileView.prototype.getters;\n/** @type {?} */\nCompileView.prototype.disposables;\n/** @type {?} */\nCompileView.prototype.componentView;\n/** @type {?} */\nCompileView.prototype.purePipes;\n/** @type {?} */\nCompileView.prototype.pipes;\n/** @type {?} */\nCompileView.prototype.locals;\n/** @type {?} */\nCompileView.prototype.className;\n/** @type {?} */\nCompileView.prototype.classType;\n/** @type {?} */\nCompileView.prototype.classExpr;\n/** @type {?} */\nCompileView.prototype.literalArrayCount;\n/** @type {?} */\nCompileView.prototype.literalMapCount;\n/** @type {?} */\nCompileView.prototype.pipeCount;\n/** @type {?} */\nCompileView.prototype.componentContext;\n/** @type {?} */\nCompileView.prototype.component;\n/** @type {?} */\nCompileView.prototype.genConfig;\n/** @type {?} */\nCompileView.prototype.pipeMetas;\n/** @type {?} */\nCompileView.prototype.styles;\n/** @type {?} */\nCompileView.prototype.animations;\n/** @type {?} */\nCompileView.prototype.viewIndex;\n/** @type {?} */\nCompileView.prototype.declarationElement;\n/** @type {?} */\nCompileView.prototype.templateVariableBindings;\n/** @type {?} */\nCompileView.prototype.targetDependencies;\n}\n\n/**\n * @param {?} component\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction getViewType(component: CompileDirectiveMetadata, embeddedTemplateIndex: number): ViewType {\n  if (embeddedTemplateIndex > 0) {\n    return ViewType.EMBEDDED;\n  }\n\n  if (component.isHost) {\n    return ViewType.HOST;\n  }\n\n  return ViewType.COMPONENT;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}