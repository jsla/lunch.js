{"version":3,"file":"compile_query.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_query.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileQueryMetadata, tokenReference} from '../compile_metadata';\nimport {ListWrapper} from '../facade/collection';\nimport {Identifiers, createIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompileView} from './compile_view';\nimport {getPropertyInView} from './util';\nclass ViewQueryValues {\n/**\n * @param {?} view\n * @param {?} values\n */\nconstructor(public view: CompileView,\npublic values: Array<o.Expression|ViewQueryValues>) {}\n}\n\nfunction ViewQueryValues_tsickle_Closure_declarations() {\n/** @type {?} */\nViewQueryValues.prototype.view;\n/** @type {?} */\nViewQueryValues.prototype.values;\n}\n\nexport class CompileQuery {\nprivate _values: ViewQueryValues;\n/**\n * @param {?} meta\n * @param {?} queryList\n * @param {?} ownerDirectiveExpression\n * @param {?} view\n */\nconstructor(\npublic meta: CompileQueryMetadata,\npublic queryList: o.Expression,\npublic ownerDirectiveExpression: o.Expression,\npublic view: CompileView) {\n    this._values = new ViewQueryValues(view, []);\n  }\n/**\n * @param {?} value\n * @param {?} view\n * @return {?}\n */\naddValue(value: o.Expression, view: CompileView) {\n    let /** @type {?} */ currentView = view;\n    const /** @type {?} */ elPath: CompileElement[] = [];\n    while (currentView && currentView !== this.view) {\n      const /** @type {?} */ parentEl = currentView.declarationElement;\n      elPath.unshift(parentEl);\n      currentView = parentEl.view;\n    }\n    const /** @type {?} */ queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n\n    let /** @type {?} */ viewValues = this._values;\n    elPath.forEach((el) => {\n      const /** @type {?} */ last =\n          viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n      if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n        viewValues = last;\n      } else {\n        const /** @type {?} */ newViewValues = new ViewQueryValues(el.embeddedView, []);\n        viewValues.values.push(newViewValues);\n        viewValues = newViewValues;\n      }\n    });\n    viewValues.values.push(value);\n\n    if (elPath.length > 0) {\n      view.dirtyParentQueriesMethod.addStmt(\n          queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n    }\n  }\n/**\n * @return {?}\n */\nprivate _isStatic(): boolean {\n    return !this._values.values.some(value => value instanceof ViewQueryValues);\n  }\n/**\n * @param {?} targetStaticMethod\n * @param {?} targetDynamicMethod\n * @return {?}\n */\ngenerateStatements(targetStaticMethod: CompileMethod, targetDynamicMethod: CompileMethod) {\n    const /** @type {?} */ values = createQueryValues(this._values);\n    const /** @type {?} */ updateStmts = [this.queryList.callMethod('reset', [o.literalArr(values)]).toStmt()];\n    if (this.ownerDirectiveExpression) {\n      const /** @type {?} */ valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n      updateStmts.push(\n          this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n    }\n    if (!this.meta.first) {\n      updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n    }\n    if (this.meta.first && this._isStatic()) {\n      // for queries that don't change and the user asked for a single element,\n      // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n      // we don't do this for QueryLists for now as this would break the timing when\n      // we call QueryList listeners...\n      targetStaticMethod.addStmts(updateStmts);\n    } else {\n      targetDynamicMethod.addStmt(new o.IfStmt(this.queryList.prop('dirty'), updateStmts));\n    }\n  }\n}\n\nfunction CompileQuery_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileQuery.prototype._values;\n/** @type {?} */\nCompileQuery.prototype.meta;\n/** @type {?} */\nCompileQuery.prototype.queryList;\n/** @type {?} */\nCompileQuery.prototype.ownerDirectiveExpression;\n/** @type {?} */\nCompileQuery.prototype.view;\n}\n\n/**\n * @param {?} viewValues\n * @return {?}\n */\nfunction createQueryValues(viewValues: ViewQueryValues): o.Expression[] {\n  return ListWrapper.flatten(viewValues.values.map((entry) => {\n    if (entry instanceof ViewQueryValues) {\n      return mapNestedViews(\n          entry.view.declarationElement.viewContainer, entry.view, createQueryValues(entry));\n    } else {\n      return /** @type {?} */(( <o.Expression>entry));\n    }\n  }));\n}\n/**\n * @param {?} viewContainer\n * @param {?} view\n * @param {?} expressions\n * @return {?}\n */\nfunction mapNestedViews(\n    viewContainer: o.Expression, view: CompileView, expressions: o.Expression[]): o.Expression {\n  const /** @type {?} */ adjustedExpressions: o.Expression[] = expressions.map(\n      (expr) => o.replaceVarInExpression(o.THIS_EXPR.name, o.variable('nestedView'), expr));\n  return viewContainer.callMethod('mapNestedViews', [\n    o.variable(view.className),\n    o.fn(\n        [new o.FnParam('nestedView', view.classType)],\n        [new o.ReturnStatement(o.literalArr(adjustedExpressions))], o.DYNAMIC_TYPE)\n  ]);\n}\n/**\n * @param {?} propertyName\n * @param {?} compileView\n * @return {?}\n */\nexport function createQueryList(propertyName: string, compileView: CompileView): o.Expression {\n  compileView.fields.push(new o.ClassField(\n      propertyName, o.importType(createIdentifier(Identifiers.QueryList), [o.DYNAMIC_TYPE])));\n  const /** @type {?} */ expr = o.THIS_EXPR.prop(propertyName);\n  compileView.createMethod.addStmt(\n      o.THIS_EXPR.prop(propertyName)\n          .set(o.importExpr(createIdentifier(Identifiers.QueryList), [o.DYNAMIC_TYPE]).instantiate([\n          ]))\n          .toStmt());\n  return expr;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nexport function addQueryToTokenMap(map: Map<any, CompileQuery[]>, query: CompileQuery) {\n  query.meta.selectors.forEach((selector) => {\n    let /** @type {?} */ entry = map.get(tokenReference(selector));\n    if (!entry) {\n      entry = [];\n      map.set(tokenReference(selector), entry);\n    }\n    entry.push(query);\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}