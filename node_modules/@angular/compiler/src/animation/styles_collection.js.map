{"version":3,"file":"styles_collection.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/animation/styles_collection.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,SAAS,EAAC,MAAM,gBAAgB;AACxC;IACA;;;OAGG;IACH,+BAAmB,IAAY,EACxB,KAAoB;QADR,SAAI,GAAJ,IAAI,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAe;IAAG,CAAC;IAC/B;;;;OAIG;IACH,uCAAO,GAAP,UAAQ,IAAY,EAAE,KAAoB;QACtC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;IAClD,CAAC;IACH,4BAAC;AAAD,CAAC,AAfD,IAeC;AAED;IACA,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC;IACrC,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC;AACtC,CAAC;AAED;IAAA;QACE,WAAM,GAA6C,EAAE,CAAC;IAoDxD,CAAC;IAnDD;;;;;OAKG;IACH,uCAAY,GAAZ,UAAa,QAAgB,EAAE,IAAY,EAAE,KAAoB;QAC7D,IAAM,gBAAgB,CAAC,KAAK,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtE,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACvC,CAAC;QAED,6CAA6C;QAC7C,iCAAiC;QACjC,IAAI,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC;QACxC,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC5B,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;gBACvB,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QAED,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IACH;;;;OAIG;IACH,qCAAU,GAAV,UAAW,QAAgB,EAAE,KAAa;QACtC,IAAM,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH;;;;OAIG;IACH,gDAAqB,GAArB,UAAsB,QAAgB,EAAE,IAAY;QAChD,IAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBAAC,MAAM,CAAC,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,uBAAC;AAAD,CAAC,AArDD,IAqDC;AAED;IACA,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;AAClC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPresent} from '../facade/lang';\nexport class StylesCollectionEntry {\n/**\n * @param {?} time\n * @param {?} value\n */\nconstructor(public time: number,\npublic value: string|number) {}\n/**\n * @param {?} time\n * @param {?} value\n * @return {?}\n */\nmatches(time: number, value: string|number): boolean {\n    return time == this.time && value == this.value;\n  }\n}\n\nfunction StylesCollectionEntry_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCollectionEntry.prototype.time;\n/** @type {?} */\nStylesCollectionEntry.prototype.value;\n}\n\nexport class StylesCollection {\n  styles: {[key: string]: StylesCollectionEntry[]} = {};\n/**\n * @param {?} property\n * @param {?} time\n * @param {?} value\n * @return {?}\n */\ninsertAtTime(property: string, time: number, value: string|number) {\n    const /** @type {?} */ tuple = new StylesCollectionEntry(time, value);\n    let /** @type {?} */ entries = this.styles[property];\n    if (!isPresent(entries)) {\n      entries = this.styles[property] = [];\n    }\n\n    // insert this at the right stop in the array\n    // this way we can keep it sorted\n    let /** @type {?} */ insertionIndex = 0;\n    for (let /** @type {?} */ i = entries.length - 1; i >= 0; i--) {\n      if (entries[i].time <= time) {\n        insertionIndex = i + 1;\n        break;\n      }\n    }\n\n    entries.splice(insertionIndex, 0, tuple);\n  }\n/**\n * @param {?} property\n * @param {?} index\n * @return {?}\n */\ngetByIndex(property: string, index: number): StylesCollectionEntry {\n    const /** @type {?} */ items = this.styles[property];\n    if (isPresent(items)) {\n      return index >= items.length ? null : items[index];\n    }\n    return null;\n  }\n/**\n * @param {?} property\n * @param {?} time\n * @return {?}\n */\nindexOfAtOrBeforeTime(property: string, time: number): number {\n    const /** @type {?} */ entries = this.styles[property];\n    if (isPresent(entries)) {\n      for (let /** @type {?} */ i = entries.length - 1; i >= 0; i--) {\n        if (entries[i].time <= time) return i;\n      }\n    }\n    return null;\n  }\n}\n\nfunction StylesCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCollection.prototype.styles;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}