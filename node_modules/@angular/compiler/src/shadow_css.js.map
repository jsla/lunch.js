{"version":3,"file":"shadow_css.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/shadow_css.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport class ShadowCss {\n  strictStyling: boolean = true;\nconstructor() {}\n/**\n * @param {?} cssText\n * @param {?} selector\n * @param {?=} hostSelector\n * @return {?}\n */\nshimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const /** @type {?} */ sourceMappingUrl: string = extractSourceMappingUrl(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n    return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let /** @type {?} */ r = '';\n    let /** @type {?} */ m: RegExpExecArray;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @param {?} regExp\n * @param {?} partReplacer\n * @return {?}\n */\nprivate _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const /** @type {?} */ parts = m[2].split(',');\n        const /** @type {?} */ r: string[] = [];\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n          const /** @type {?} */ p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let /** @type {?} */ selector = rule.selector;\n      let /** @type {?} */ content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @param {?} strict\n * @return {?}\n */\nprivate _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const /** @type {?} */ applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n/**\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _makeScopeMatcher(scopeSelector: string): RegExp {\n    const /** @type {?} */ lre = /\\[/g;\n    const /** @type {?} */ rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const /** @type {?} */ attrName = '[' + scopeSelector + ']';\n\n    const /** @type {?} */ _scopeSelectorPart = (p: string) => {\n      let /** @type {?} */ scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const /** @type {?} */ safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let /** @type {?} */ scopedSelector = '';\n    let /** @type {?} */ startIndex = 0;\n    let /** @type {?} */ res: RegExpExecArray;\n    const /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n    const /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\n    while ((res = sep.exec(selector)) !== null) {\n      const /** @type {?} */ separator = res[1];\n      const /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n      // if a selector appears before :host-context it should not be shimmed as it\n      // matches on ancestor elements and not on elements in the host's shadow\n      const /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nfunction ShadowCss_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowCss.prototype.strictStyling;\n}\n\nclass SafeSelector {\nprivate placeholders: string[] = [];\nprivate index = 0;\nprivate _content: string;\n/**\n * @param {?} selector\n */\nconstructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  };\n/**\n * @param {?} content\n * @return {?}\n */\nrestore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n/**\n * @return {?}\n */\ncontent(): string { return this._content; }\n}\n\nfunction SafeSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeSelector.prototype.placeholders;\n/** @type {?} */\nSafeSelector.prototype.index;\n/** @type {?} */\nSafeSelector.prototype._content;\n}\n\n\nconst /** @type {?} */ _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nconst /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst /** @type {?} */ _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\nconst /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nconst /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\nconst /** @type {?} */ _colonHostRe = /:host/gim;\nconst /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n\nconst /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\n// all comments except inline source mapping\nconst /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input: string): string {\n  const /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n  return matcher ? matcher[0] : '';\n}\n\nconst /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n/**\n * @param {?} selector\n * @param {?} content\n */\nconstructor(public selector: string,\npublic content: string) {}\n}\n\nfunction CssRule_tsickle_Closure_declarations() {\n/** @type {?} */\nCssRule.prototype.selector;\n/** @type {?} */\nCssRule.prototype.content;\n}\n\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n  let /** @type {?} */ nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const /** @type {?} */ selector = m[2];\n    let /** @type {?} */ content = '';\n    let /** @type {?} */ suffix = m[4];\n    let /** @type {?} */ contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\nclass StringWithEscapedBlocks {\n/**\n * @param {?} escapedString\n * @param {?} blocks\n */\nconstructor(public escapedString: string,\npublic blocks: string[]) {}\n}\n\nfunction StringWithEscapedBlocks_tsickle_Closure_declarations() {\n/** @type {?} */\nStringWithEscapedBlocks.prototype.escapedString;\n/** @type {?} */\nStringWithEscapedBlocks.prototype.blocks;\n}\n\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const /** @type {?} */ inputParts = input.split(_curlyRe);\n  const /** @type {?} */ resultParts: string[] = [];\n  const /** @type {?} */ escapedBlocks: string[] = [];\n  let /** @type {?} */ bracketCount = 0;\n  let /** @type {?} */ currentBlockParts: string[] = [];\n  for (let /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const /** @type {?} */ part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}