{"version":3,"file":"message_bundle.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/i18n/message_bundle.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAMI,EAAC,eAAe,EAAC,MAAM,oBAAoB;AAGlD;;GAEG;AACH;IAEA;;;;OAIG;IACH,uBACQ,WAAuB,EACvB,aAAuB,EACvB,cAAuC;QAFvC,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAU;QACvB,mBAAc,GAAd,cAAc,CAAyB;QATvC,cAAS,GAAc,EAAE,CAAC;IASgB,CAAC;IACnD;;;;;OAKG;IACH,0CAAkB,GAAlB,UAAmB,IAAY,EAAE,GAAW,EAAE,mBAAwC;QAElF,IAAM,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;QAEvG,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACjC,CAAC;QAED,IAAM,gBAAgB,CAAC,gBAAgB,GAAG,eAAe,CACrD,gBAAgB,CAAC,SAAS,EAAE,mBAAmB,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE9F,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACjC,CAAC;QAED,MAAA,IAAI,CAAC,SAAS,EAAC,IAAI,WAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAC;;IACpD,CAAC;IACH;;OAEG;IACH,mCAAW,GAAX,cAA2B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACnD;;;OAGG;IACH,6BAAK,GAAL,UAAM,UAAsB,IAAY,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAClF,oBAAC;AAAD,CAAC,AA3CD,IA2CC;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC;IACpC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC;IACtC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC;AACvC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport {Message} from './i18n_ast';\nimport {Serializer} from './serializers/serializer';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\nprivate _messages: Message[] = [];\n/**\n * @param {?} _htmlParser\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]}) {}\n/**\n * @param {?} html\n * @param {?} url\n * @param {?} interpolationConfig\n * @return {?}\n */\nupdateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const /** @type {?} */ i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n  }\n/**\n * @return {?}\n */\ngetMessages(): Message[] { return this._messages; }\n/**\n * @param {?} serializer\n * @return {?}\n */\nwrite(serializer: Serializer): string { return serializer.write(this._messages); }\n}\n\nfunction MessageBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBundle.prototype._messages;\n/** @type {?} */\nMessageBundle.prototype._htmlParser;\n/** @type {?} */\nMessageBundle.prototype._implicitTags;\n/** @type {?} */\nMessageBundle.prototype._implicitAttrs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}