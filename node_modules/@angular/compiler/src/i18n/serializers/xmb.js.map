{"version":3,"file":"xmb.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xmb.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\n\nimport {PlaceholderMapper, Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\nconst /** @type {?} */ _MESSAGE_TAG = 'msg';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _EXEMPLE_TAG = 'ex';\n\nconst /** @type {?} */ _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\nexport class Xmb extends Serializer {\n/**\n * @param {?} messages\n * @return {?}\n */\nwrite(messages: i18n.Message[]): string {\n    const /** @type {?} */ exampleVisitor = new ExampleVisitor();\n    const /** @type {?} */ visitor = new _Visitor();\n    const /** @type {?} */ visited: {[id: string]: boolean} = {};\n    let /** @type {?} */ rootNode = new xml.Tag(_MESSAGES_TAG);\n\n    messages.forEach(message => {\n      const /** @type {?} */ id = this.digest(message);\n\n      // deduplicate messages\n      if (visited[id]) return;\n      visited[id] = true;\n\n      const /** @type {?} */ mapper = this.createNameMapper(message);\n\n      const /** @type {?} */ attrs: {[k: string]: string} = {id};\n\n      if (message.description) {\n        attrs['desc'] = message.description;\n      }\n\n      if (message.meaning) {\n        attrs['meaning'] = message.meaning;\n      }\n\n      rootNode.children.push(\n          new xml.CR(2),\n          new xml.Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes, {mapper})));\n    });\n\n    rootNode.children.push(new xml.CR());\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}),\n      new xml.CR(),\n      new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n      new xml.CR(),\n      exampleVisitor.addDefaultExamples(rootNode),\n      new xml.CR(),\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    throw new Error('Unsupported');\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new XmbPlaceholderMapper(message);\n  }\n}\nclass _Visitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?} ctx\n * @return {?}\n */\nvisitText(text: i18n.Text, ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    return [new xml.Text(text.value)];\n  }\n/**\n * @param {?} container\n * @param {?} ctx\n * @return {?}\n */\nvisitContainer(container: i18n.Container, ctx: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this, ctx)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?} ctx\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this, ctx), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?} ctx\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    const /** @type {?} */ startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n    let /** @type {?} */ name = ctx.mapper.toPublicName(ph.startName);\n    const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name}, [startEx]);\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const /** @type {?} */ closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n    name = ctx.mapper.toPublicName(ph.closeName);\n    const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name}, [closeEx]);\n\n    return [startTagPh, ...this.serialize(ph.children, ctx), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?} ctx\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    const /** @type {?} */ name = ctx.mapper.toPublicName(ph.name);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name})];\n  }\n/**\n * @param {?} ph\n * @param {?} ctx\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    const /** @type {?} */ name = ctx.mapper.toPublicName(ph.name);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name})];\n  }\n/**\n * @param {?} nodes\n * @param {?} ctx\n * @return {?}\n */\nserialize(nodes: i18n.Node[], ctx: {mapper: PlaceholderMapper}): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this, ctx)));\n  }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message: i18n.Message): string {\n  return decimalDigest(message);\n}\nclass ExampleVisitor implements xml.IVisitor {\n/**\n * @param {?} node\n * @return {?}\n */\naddDefaultExamples(node: xml.Node): xml.Node {\n    node.visit(this);\n    return node;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nvisitTag(tag: xml.Tag): void {\n    if (tag.name === _PLACEHOLDER_TAG) {\n      if (!tag.children || tag.children.length == 0) {\n        const /** @type {?} */ exText = new xml.Text(tag.attrs['name'] || '...');\n        tag.children = [new xml.Tag(_EXEMPLE_TAG, {}, [exText])];\n      }\n    } else if (tag.children) {\n      tag.children.forEach(node => node.visit(this));\n    }\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nvisitText(text: xml.Text): void {}\n/**\n * @param {?} decl\n * @return {?}\n */\nvisitDeclaration(decl: xml.Declaration): void {}\n/**\n * @param {?} doctype\n * @return {?}\n */\nvisitDoctype(doctype: xml.Doctype): void {}\n}\n/**\n * XMB/XTB placeholders can only contain A-Z, 0-9 and _\n * \n * Because such restrictions do not exist on placeholder names generated locally, the\n * `PlaceholderMapper` is used to convert internal names to XMB names when the XMB file is\n * serialized and back from XTB to internal names when an XTB is loaded.\n */\nexport class XmbPlaceholderMapper implements PlaceholderMapper, i18n.Visitor {\nprivate internalToXmb: {[k: string]: string} = {};\nprivate xmbToNextId: {[k: string]: number} = {};\nprivate xmbToInternal: {[k: string]: string} = {};\n/**\n * @param {?} message\n */\nconstructor(message: i18n.Message) { message.nodes.forEach(node => node.visit(this)); }\n/**\n * @param {?} internalName\n * @return {?}\n */\ntoPublicName(internalName: string): string {\n    return this.internalToXmb.hasOwnProperty(internalName) ? this.internalToXmb[internalName] :\n                                                             null;\n  }\n/**\n * @param {?} publicName\n * @return {?}\n */\ntoInternalName(publicName: string): string {\n    return this.xmbToInternal.hasOwnProperty(publicName) ? this.xmbToInternal[publicName] : null;\n  }\n/**\n * @param {?} text\n * @param {?=} ctx\n * @return {?}\n */\nvisitText(text: i18n.Text, ctx?: any): any { return null; }\n/**\n * @param {?} container\n * @param {?=} ctx\n * @return {?}\n */\nvisitContainer(container: i18n.Container, ctx?: any): any {\n    container.children.forEach(child => child.visit(this));\n  }\n/**\n * @param {?} icu\n * @param {?=} ctx\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, ctx?: any): any {\n    Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n  }\n/**\n * @param {?} ph\n * @param {?=} ctx\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, ctx?: any): any {\n    this.addPlaceholder(ph.startName);\n    ph.children.forEach(child => child.visit(this));\n    this.addPlaceholder(ph.closeName);\n  }\n/**\n * @param {?} ph\n * @param {?=} ctx\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, ctx?: any): any { this.addPlaceholder(ph.name); }\n/**\n * @param {?} ph\n * @param {?=} ctx\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, ctx?: any): any { this.addPlaceholder(ph.name); }\n/**\n * @param {?} internalName\n * @return {?}\n */\nprivate addPlaceholder(internalName: string): void {\n    if (!internalName || this.internalToXmb.hasOwnProperty(internalName)) {\n      return;\n    }\n\n    let /** @type {?} */ xmbName = internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n\n    if (this.xmbToInternal.hasOwnProperty(xmbName)) {\n      // Create a new XMB when it has already been used\n      const /** @type {?} */ nextId = this.xmbToNextId[xmbName];\n      this.xmbToNextId[xmbName] = nextId + 1;\n      xmbName = `${xmbName}_${nextId}`;\n    } else {\n      this.xmbToNextId[xmbName] = 1;\n    }\n\n    this.internalToXmb[internalName] = xmbName;\n    this.xmbToInternal[xmbName] = internalName;\n  }\n}\n\nfunction XmbPlaceholderMapper_tsickle_Closure_declarations() {\n/** @type {?} */\nXmbPlaceholderMapper.prototype.internalToXmb;\n/** @type {?} */\nXmbPlaceholderMapper.prototype.xmbToNextId;\n/** @type {?} */\nXmbPlaceholderMapper.prototype.xmbToInternal;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}