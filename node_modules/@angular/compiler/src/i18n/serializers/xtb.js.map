{"version":3,"file":"xtb.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xtb.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {PlaceholderMapper, Serializer} from './serializer';\nimport {XmbPlaceholderMapper, digest} from './xmb';\n\nconst /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\nconst /** @type {?} */ _TRANSLATION_TAG = 'translation';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n/**\n * @param {?} messages\n * @return {?}\n */\nwrite(messages: i18n.Message[]): string { throw new Error('Unsupported'); }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    // xtb to xml nodes\n    const /** @type {?} */ xtbParser = new XtbParser();\n    const {mlNodesByMsgId, errors} = xtbParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n    Object.keys(mlNodesByMsgId).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(mlNodesByMsgId[msgId]);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return i18nNodesByMsgId;\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new XmbPlaceholderMapper(message);\n  }\n}\nclass XtbParser implements ml.Visitor {\nprivate _bundleDepth: number;\nprivate _errors: I18nError[];\nprivate _mlNodesByMsgId: {[msgId: string]: ml.Node[]};\n/**\n * @param {?} xtb\n * @param {?} url\n * @return {?}\n */\nparse(xtb: string, url: string) {\n    this._bundleDepth = 0;\n    this._mlNodesByMsgId = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xtb, url, true);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      mlNodesByMsgId: this._mlNodesByMsgId,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._mlNodesByMsgId.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            this._mlNodesByMsgId[id] = element.children;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XtbParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXtbParser.prototype._bundleDepth;\n/** @type {?} */\nXtbParser.prototype._errors;\n/** @type {?} */\nXtbParser.prototype._mlNodesByMsgId;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} nodes\n * @return {?}\n */\nconvert(nodes: ml.Node[]) {\n    this._errors = [];\n    return {\n      i18nNodes: ml.visitAll(this, nodes),\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'name');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}