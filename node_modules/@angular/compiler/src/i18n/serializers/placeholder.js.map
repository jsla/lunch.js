{"version":3,"file":"placeholder.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/placeholder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst /** @type {?} */ TAG_TO_PLACEHOLDER_NAMES: {[k: string]: string} = {\n  'A': 'LINK',\n  'B': 'BOLD_TEXT',\n  'BR': 'LINE_BREAK',\n  'EM': 'EMPHASISED_TEXT',\n  'H1': 'HEADING_LEVEL1',\n  'H2': 'HEADING_LEVEL2',\n  'H3': 'HEADING_LEVEL3',\n  'H4': 'HEADING_LEVEL4',\n  'H5': 'HEADING_LEVEL5',\n  'H6': 'HEADING_LEVEL6',\n  'HR': 'HORIZONTAL_RULE',\n  'I': 'ITALIC_TEXT',\n  'LI': 'LIST_ITEM',\n  'LINK': 'MEDIA_LINK',\n  'OL': 'ORDERED_LIST',\n  'P': 'PARAGRAPH',\n  'Q': 'QUOTATION',\n  'S': 'STRIKETHROUGH_TEXT',\n  'SMALL': 'SMALL_TEXT',\n  'SUB': 'SUBSTRIPT',\n  'SUP': 'SUPERSCRIPT',\n  'TBODY': 'TABLE_BODY',\n  'TD': 'TABLE_CELL',\n  'TFOOT': 'TABLE_FOOTER',\n  'TH': 'TABLE_HEADER_CELL',\n  'THEAD': 'TABLE_HEADER',\n  'TR': 'TABLE_ROW',\n  'TT': 'MONOSPACED_TEXT',\n  'U': 'UNDERLINED_TEXT',\n  'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n * \n * Returns the same placeholder name when the content is identical.\n * \n * \\@internal\n */\nexport class PlaceholderRegistry {\nprivate _placeHolderNameCounts: {[k: string]: number} = {};\nprivate _signatureToName: {[k: string]: string} = {};\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} isVoid\n * @return {?}\n */\ngetStartTagPlaceholderName(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ upperTag = tag.toUpperCase();\n    const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : `START_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\ngetCloseTagPlaceholderName(tag: string): string {\n    const /** @type {?} */ signature = this._hashClosingTag(tag);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ upperTag = tag.toUpperCase();\n    const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const /** @type {?} */ name = this._generateUniqueName(`CLOSE_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n/**\n * @param {?} name\n * @param {?} content\n * @return {?}\n */\ngetPlaceholderName(name: string, content: string): string {\n    const /** @type {?} */ upperName = name.toUpperCase();\n    const /** @type {?} */ signature = `PH: ${upperName}=${content}`;\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n    this._signatureToName[signature] = uniqueName;\n\n    return uniqueName;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetUniquePlaceholder(name: string): string {\n    return this._generateUniqueName(name.toUpperCase());\n  }\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} isVoid\n * @return {?}\n */\nprivate _hashTag(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const /** @type {?} */ start = `<${tag}`;\n    const /** @type {?} */ strAttrs = Object.keys(attrs).sort().map((name) => ` ${name}=${attrs[name]}`).join('');\n    const /** @type {?} */ end = isVoid ? '/>' : `></${tag}>`;\n\n    return start + strAttrs + end;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nprivate _hashClosingTag(tag: string): string { return this._hashTag(`/${tag}`, {}, false); }\n/**\n * @param {?} base\n * @return {?}\n */\nprivate _generateUniqueName(base: string): string {\n    const /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n    if (!seen) {\n      this._placeHolderNameCounts[base] = 1;\n      return base;\n    }\n\n    const /** @type {?} */ id = this._placeHolderNameCounts[base];\n    this._placeHolderNameCounts[base] = id + 1;\n    return `${base}_${id}`;\n  }\n}\n\nfunction PlaceholderRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nPlaceholderRegistry.prototype._placeHolderNameCounts;\n/** @type {?} */\nPlaceholderRegistry.prototype._signatureToName;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}