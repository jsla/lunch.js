{"version":3,"file":"i18n_html_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/i18n/i18n_html_parser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,EAAC,4BAA4B,EAAsB,MAAM,mCAAmC;OAC5F,EAAC,eAAe,EAAC,MAAM,qBAAqB;OAE5C,EAAC,iBAAiB,EAAC,MAAM,oBAAoB;OAE7C,EAAC,KAAK,EAAC,MAAM,qBAAqB;OAClC,EAAC,GAAG,EAAC,MAAM,mBAAmB;OAC9B,EAAC,GAAG,EAAC,MAAM,mBAAmB;OAC9B,EAAC,iBAAiB,EAAC,MAAM,sBAAsB;AACtD;IAGA;;;;OAIG;IACH,wBACQ,WAAuB,EACvB,aAAsB,EACtB,mBAA4B;QAF5B,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAS;QACtB,wBAAmB,GAAnB,mBAAmB,CAAS;IAAG,CAAC;IACxC;;;;;;OAMG;IACH,8BAAK,GAAL,UACM,MAAc,EAAE,GAAW,EAAE,mBAAoC,EACjE,mBAAuE;QAD1C,mCAAoC,GAApC,2BAAoC;QACjE,mCAAuE,GAAvE,kDAAuE;QACzE,IAAM,gBAAgB,CAAC,WAAW,GAC9B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;QAElF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC;YACrD,4DAA4D;YAC5D,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC;QAED,yDAAyD;QAEzD,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;QACxE,CAAC;QAED,IAAM,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7D,IAAM,gBAAgB,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAEvG,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAClG,CAAC;IACH;;OAEG;IACK,0CAAiB,GAAzB;QACI,IAAM,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,mBAAmB,IAAI,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAElF,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,KAAK;gBACR,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACnB,KAAK,KAAK;gBACR,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACnB,KAAK,OAAO,CAAC;YACb,KAAK,KAAK,CAAC;YACX;gBACE,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IACH,qBAAC;AAAD,CAAC,AA1DD,IA0DC;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IACrC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IACvC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;AAC7C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\n\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\n/**\n * @param {?} _htmlParser\n * @param {?=} _translations\n * @param {?=} _translationsFormat\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _translations?: string,\nprivate _translationsFormat?: string) {}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ parseResult =\n        this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\n    if (!this._translations || this._translations === '') {\n      // Do not enable i18n when no translation bundle is provided\n      return parseResult;\n    }\n\n    // TODO(vicb): add support for implicit tags / attributes\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    const /** @type {?} */ serializer = this._createSerializer();\n    const /** @type {?} */ translationBundle = TranslationBundle.load(this._translations, url, serializer);\n\n    return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n  }\n/**\n * @return {?}\n */\nprivate _createSerializer(): Serializer {\n    const /** @type {?} */ format = (this._translationsFormat || 'xlf').toLowerCase();\n\n    switch (format) {\n      case 'xmb':\n        return new Xmb();\n      case 'xtb':\n        return new Xtb();\n      case 'xliff':\n      case 'xlf':\n      default:\n        return new Xliff();\n    }\n  }\n}\n\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nI18NHtmlParser.prototype.getTagDefinition;\n/** @type {?} */\nI18NHtmlParser.prototype._htmlParser;\n/** @type {?} */\nI18NHtmlParser.prototype._translations;\n/** @type {?} */\nI18NHtmlParser.prototype._translationsFormat;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}