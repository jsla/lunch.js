{"version":3,"file":"output_jit.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/output_jit.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {identifierName} from '../compile_metadata';\nimport {isPresent} from '../facade/lang';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} expr\n * @param {?} declarations\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(\n    sourceUrl: string, expr: string, declarations: string, vars: {[key: string]: any}): any {\n  const /** @type {?} */ fnBody = `${declarations}\\nreturn ${expr}\\n//# sourceURL=${sourceUrl}`;\n  const /** @type {?} */ fnArgNames: string[] = [];\n  const /** @type {?} */ fnArgValues: any[] = [];\n  for (const /** @type {?} */ argName in vars) {\n    fnArgNames.push(argName);\n    fnArgValues.push(vars[argName]);\n  }\n  return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVar\n * @return {?}\n */\nexport function jitStatements(\n    sourceUrl: string, statements: o.Statement[], resultVar: string): any {\n  const /** @type {?} */ converter = new JitEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot([resultVar]);\n  converter.visitAllStatements(statements, ctx);\n  return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n}\nclass JitEmitterVisitor extends AbstractJsEmitterVisitor {\nprivate _evalArgNames: string[] = [];\nprivate _evalArgValues: any[] = [];\n/**\n * @return {?}\n */\ngetArgs(): {[key: string]: any} {\n    const /** @type {?} */ result: {[key: string]: any} = {};\n    for (let /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value.reference;\n    let /** @type {?} */ id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      const /** @type {?} */ name = identifierName(ast.value) || 'val';\n      this._evalArgNames.push(`jit_${name}${id}`);\n    }\n    ctx.print(this._evalArgNames[id]);\n    return null;\n  }\n}\n\nfunction JitEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgNames;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgValues;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}