{"version":3,"file":"output_ast.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/output_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileIdentifierMetadata} from '../compile_metadata';\nimport {isPresent} from '../facade/lang';\nexport type TypeModifier = number;\nexport let TypeModifier: any = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n\n/**\n * @abstract\n */\nexport abstract class Type {\n/**\n * @param {?=} modifiers\n */\nconstructor(public modifiers: TypeModifier[] = null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n  }\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any) {}\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: TypeModifier): boolean { return this.modifiers.indexOf(modifier) !== -1; }\n}\n\nfunction Type_tsickle_Closure_declarations() {\n/** @type {?} */\nType.prototype.modifiers;\n}\n\nexport type BuiltinTypeName = number;\nexport let BuiltinTypeName: any = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Null = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Null] = \"Null\";\n\nexport class BuiltinType extends Type {\n/**\n * @param {?} name\n * @param {?=} modifiers\n */\nconstructor(public name: BuiltinTypeName, modifiers: TypeModifier[] = null) { super(modifiers); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitBuiltintType(this, context);\n  }\n}\n\nfunction BuiltinType_tsickle_Closure_declarations() {\n/** @type {?} */\nBuiltinType.prototype.name;\n}\n\nexport class ExpressionType extends Type {\n/**\n * @param {?} value\n * @param {?=} typeParams\n * @param {?=} modifiers\n */\nconstructor(\npublic value: Expression,\npublic typeParams: Type[] = null,\n      modifiers: TypeModifier[] = null) {\n    super(modifiers);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitExpressionType(this, context);\n  }\n}\n\nfunction ExpressionType_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionType.prototype.value;\n/** @type {?} */\nExpressionType.prototype.typeParams;\n}\n\nexport class ArrayType extends Type {\n/**\n * @param {?} of\n * @param {?=} modifiers\n */\nconstructor(public of : Type, modifiers: TypeModifier[] = null) { super(modifiers); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitArrayType(this, context);\n  }\n}\n\nfunction ArrayType_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayType.prototype.of;\n}\n\nexport class MapType extends Type {\n/**\n * @param {?} valueType\n * @param {?=} modifiers\n */\nconstructor(public valueType: Type, modifiers: TypeModifier[] = null) { super(modifiers); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any { return visitor.visitMapType(this, context); }\n}\n\nfunction MapType_tsickle_Closure_declarations() {\n/** @type {?} */\nMapType.prototype.valueType;\n}\n\n\nexport const /** @type {?} */ DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport const /** @type {?} */ BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport const /** @type {?} */ INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport const /** @type {?} */ NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport const /** @type {?} */ STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport const /** @type {?} */ FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nexport const /** @type {?} */ NULL_TYPE = new BuiltinType(BuiltinTypeName.Null);\n\nexport interface TypeVisitor {\n  visitBuiltintType(type: BuiltinType, context: any): any;\n  visitExpressionType(type: ExpressionType, context: any): any;\n  visitArrayType(type: ArrayType, context: any): any;\n  visitMapType(type: MapType, context: any): any;\n}\nexport type BinaryOperator = number;\nexport let BinaryOperator: any = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n\n/**\n * @abstract\n */\nexport abstract class Expression {\n/**\n * @param {?} type\n */\nconstructor(public type: Type) {}\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any) {}\n/**\n * @param {?} name\n * @return {?}\n */\nprop(name: string): ReadPropExpr { return new ReadPropExpr(this, name); }\n/**\n * @param {?} index\n * @param {?=} type\n * @return {?}\n */\nkey(index: Expression, type: Type = null): ReadKeyExpr {\n    return new ReadKeyExpr(this, index, type);\n  }\n/**\n * @param {?} name\n * @param {?} params\n * @return {?}\n */\ncallMethod(name: string|BuiltinMethod, params: Expression[]): InvokeMethodExpr {\n    return new InvokeMethodExpr(this, name, params);\n  }\n/**\n * @param {?} params\n * @return {?}\n */\ncallFn(params: Expression[]): InvokeFunctionExpr { return new InvokeFunctionExpr(this, params); }\n/**\n * @param {?} params\n * @param {?=} type\n * @return {?}\n */\ninstantiate(params: Expression[], type: Type = null): InstantiateExpr {\n    return new InstantiateExpr(this, params, type);\n  }\n/**\n * @param {?} trueCase\n * @param {?=} falseCase\n * @return {?}\n */\nconditional(trueCase: Expression, falseCase: Expression = null): ConditionalExpr {\n    return new ConditionalExpr(this, trueCase, falseCase);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nequals(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nnotEquals(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nidentical(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nnotIdentical(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nminus(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nplus(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\ndivide(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nmultiply(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nmodulo(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nand(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nor(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nlower(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nlowerEquals(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nbigger(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n  }\n/**\n * @param {?} rhs\n * @return {?}\n */\nbiggerEquals(rhs: Expression): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n  }\n/**\n * @return {?}\n */\nisBlank(): Expression {\n    // Note: We use equals by purpose here to compare to null and undefined in JS.\n    // We use the typed null to allow strictNullChecks to narrow types.\n    return this.equals(TYPED_NULL_EXPR);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ncast(type: Type): Expression { return new CastExpr(this, type); }\n/**\n * @return {?}\n */\ntoStmt(): Statement { return new ExpressionStatement(this); }\n}\n\nfunction Expression_tsickle_Closure_declarations() {\n/** @type {?} */\nExpression.prototype.type;\n}\n\nexport type BuiltinVar = number;\nexport let BuiltinVar: any = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\n\nexport class ReadVarExpr extends Expression {\npublic name: string;\npublic builtin: BuiltinVar;\n/**\n * @param {?} name\n * @param {?=} type\n */\nconstructor(name: string|BuiltinVar, type: Type = null) {\n    super(type);\n    if (typeof name === 'string') {\n      this.name = name;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = <BuiltinVar>name;\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadVarExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WriteVarExpr { return new WriteVarExpr(this.name, value); }\n}\n\nfunction ReadVarExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadVarExpr.prototype.name;\n/** @type {?} */\nReadVarExpr.prototype.builtin;\n}\n\nexport class WriteVarExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n */\nconstructor(public name: string, value: Expression, type: Type = null) {\n    super(type || value.type);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteVarExpr(this, context);\n  }\n/**\n * @param {?=} type\n * @param {?=} modifiers\n * @return {?}\n */\ntoDeclStmt(type: Type = null, modifiers: StmtModifier[] = null): DeclareVarStmt {\n    return new DeclareVarStmt(this.name, this.value, type, modifiers);\n  }\n}\n\nfunction WriteVarExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWriteVarExpr.prototype.value;\n/** @type {?} */\nWriteVarExpr.prototype.name;\n}\n\nexport class WriteKeyExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} receiver\n * @param {?} index\n * @param {?} value\n * @param {?=} type\n */\nconstructor(\npublic receiver: Expression,\npublic index: Expression, value: Expression, type: Type = null) {\n    super(type || value.type);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteKeyExpr(this, context);\n  }\n}\n\nfunction WriteKeyExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWriteKeyExpr.prototype.value;\n/** @type {?} */\nWriteKeyExpr.prototype.receiver;\n/** @type {?} */\nWriteKeyExpr.prototype.index;\n}\n\nexport class WritePropExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n */\nconstructor(\npublic receiver: Expression,\npublic name: string, value: Expression, type: Type = null) {\n    super(type || value.type);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWritePropExpr(this, context);\n  }\n}\n\nfunction WritePropExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWritePropExpr.prototype.value;\n/** @type {?} */\nWritePropExpr.prototype.receiver;\n/** @type {?} */\nWritePropExpr.prototype.name;\n}\n\nexport type BuiltinMethod = number;\nexport let BuiltinMethod: any = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\n\nexport class InvokeMethodExpr extends Expression {\npublic name: string;\npublic builtin: BuiltinMethod;\n/**\n * @param {?} receiver\n * @param {?} method\n * @param {?} args\n * @param {?=} type\n */\nconstructor(\npublic receiver: Expression, method: string|BuiltinMethod,\npublic args: Expression[],\n      type: Type = null) {\n    super(type);\n    if (typeof method === 'string') {\n      this.name = method;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = <BuiltinMethod>method;\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeMethodExpr(this, context);\n  }\n}\n\nfunction InvokeMethodExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInvokeMethodExpr.prototype.name;\n/** @type {?} */\nInvokeMethodExpr.prototype.builtin;\n/** @type {?} */\nInvokeMethodExpr.prototype.receiver;\n/** @type {?} */\nInvokeMethodExpr.prototype.args;\n}\n\nexport class InvokeFunctionExpr extends Expression {\n/**\n * @param {?} fn\n * @param {?} args\n * @param {?=} type\n */\nconstructor(public fn: Expression,\npublic args: Expression[], type: Type = null) { super(type); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeFunctionExpr(this, context);\n  }\n}\n\nfunction InvokeFunctionExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInvokeFunctionExpr.prototype.fn;\n/** @type {?} */\nInvokeFunctionExpr.prototype.args;\n}\n\nexport class InstantiateExpr extends Expression {\n/**\n * @param {?} classExpr\n * @param {?} args\n * @param {?=} type\n */\nconstructor(public classExpr: Expression,\npublic args: Expression[], type?: Type) { super(type); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInstantiateExpr(this, context);\n  }\n}\n\nfunction InstantiateExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInstantiateExpr.prototype.classExpr;\n/** @type {?} */\nInstantiateExpr.prototype.args;\n}\n\nexport class LiteralExpr extends Expression {\n/**\n * @param {?} value\n * @param {?=} type\n */\nconstructor(public value: any, type: Type = null) { super(type); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralExpr(this, context);\n  }\n}\n\nfunction LiteralExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralExpr.prototype.value;\n}\n\nexport class ExternalExpr extends Expression {\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} typeParams\n */\nconstructor(\npublic value: CompileIdentifierMetadata, type: Type = null,\npublic typeParams: Type[] = null) {\n    super(type);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitExternalExpr(this, context);\n  }\n}\n\nfunction ExternalExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nExternalExpr.prototype.value;\n/** @type {?} */\nExternalExpr.prototype.typeParams;\n}\n\nexport class ConditionalExpr extends Expression {\npublic trueCase: Expression;\n/**\n * @param {?} condition\n * @param {?} trueCase\n * @param {?=} falseCase\n * @param {?=} type\n */\nconstructor(\npublic condition: Expression, trueCase: Expression,\npublic falseCase: Expression = null,\n      type: Type = null) {\n    super(type || trueCase.type);\n    this.trueCase = trueCase;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitConditionalExpr(this, context);\n  }\n}\n\nfunction ConditionalExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nConditionalExpr.prototype.trueCase;\n/** @type {?} */\nConditionalExpr.prototype.condition;\n/** @type {?} */\nConditionalExpr.prototype.falseCase;\n}\n\nexport class NotExpr extends Expression {\n/**\n * @param {?} condition\n */\nconstructor(public condition: Expression) { super(BOOL_TYPE); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitNotExpr(this, context);\n  }\n}\n\nfunction NotExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nNotExpr.prototype.condition;\n}\n\nexport class CastExpr extends Expression {\n/**\n * @param {?} value\n * @param {?} type\n */\nconstructor(public value: Expression, type: Type) { super(type); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitCastExpr(this, context);\n  }\n}\n\nfunction CastExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nCastExpr.prototype.value;\n}\n\nexport class FnParam {\n/**\n * @param {?} name\n * @param {?=} type\n */\nconstructor(public name: string,\npublic type: Type = null) {}\n}\n\nfunction FnParam_tsickle_Closure_declarations() {\n/** @type {?} */\nFnParam.prototype.name;\n/** @type {?} */\nFnParam.prototype.type;\n}\n\nexport class FunctionExpr extends Expression {\n/**\n * @param {?} params\n * @param {?} statements\n * @param {?=} type\n */\nconstructor(public params: FnParam[],\npublic statements: Statement[], type: Type = null) {\n    super(type);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitFunctionExpr(this, context);\n  }\n/**\n * @param {?} name\n * @param {?=} modifiers\n * @return {?}\n */\ntoDeclStmt(name: string, modifiers: StmtModifier[] = null): DeclareFunctionStmt {\n    return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n  }\n}\n\nfunction FunctionExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nFunctionExpr.prototype.params;\n/** @type {?} */\nFunctionExpr.prototype.statements;\n}\n\nexport class BinaryOperatorExpr extends Expression {\npublic lhs: Expression;\n/**\n * @param {?} operator\n * @param {?} lhs\n * @param {?} rhs\n * @param {?=} type\n */\nconstructor(\npublic operator: BinaryOperator, lhs: Expression,\npublic rhs: Expression, type: Type = null) {\n    super(type || lhs.type);\n    this.lhs = lhs;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitBinaryOperatorExpr(this, context);\n  }\n}\n\nfunction BinaryOperatorExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nBinaryOperatorExpr.prototype.lhs;\n/** @type {?} */\nBinaryOperatorExpr.prototype.operator;\n/** @type {?} */\nBinaryOperatorExpr.prototype.rhs;\n}\n\nexport class ReadPropExpr extends Expression {\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?=} type\n */\nconstructor(public receiver: Expression,\npublic name: string, type: Type = null) { super(type); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadPropExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WritePropExpr {\n    return new WritePropExpr(this.receiver, this.name, value);\n  }\n}\n\nfunction ReadPropExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadPropExpr.prototype.receiver;\n/** @type {?} */\nReadPropExpr.prototype.name;\n}\n\nexport class ReadKeyExpr extends Expression {\n/**\n * @param {?} receiver\n * @param {?} index\n * @param {?=} type\n */\nconstructor(public receiver: Expression,\npublic index: Expression, type: Type = null) {\n    super(type);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadKeyExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WriteKeyExpr {\n    return new WriteKeyExpr(this.receiver, this.index, value);\n  }\n}\n\nfunction ReadKeyExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadKeyExpr.prototype.receiver;\n/** @type {?} */\nReadKeyExpr.prototype.index;\n}\n\nexport class LiteralArrayExpr extends Expression {\npublic entries: Expression[];\n/**\n * @param {?} entries\n * @param {?=} type\n */\nconstructor(entries: Expression[], type: Type = null) {\n    super(type);\n    this.entries = entries;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralArrayExpr(this, context);\n  }\n}\n\nfunction LiteralArrayExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralArrayExpr.prototype.entries;\n}\n\nexport class LiteralMapEntry {\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} quoted\n */\nconstructor(public key: string,\npublic value: Expression,\npublic quoted: boolean = false) {}\n}\n\nfunction LiteralMapEntry_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMapEntry.prototype.key;\n/** @type {?} */\nLiteralMapEntry.prototype.value;\n/** @type {?} */\nLiteralMapEntry.prototype.quoted;\n}\n\nexport class LiteralMapExpr extends Expression {\npublic valueType: Type = null;\n/**\n * @param {?} entries\n * @param {?=} type\n */\nconstructor(public entries: LiteralMapEntry[], type: MapType = null) {\n    super(type);\n    if (isPresent(type)) {\n      this.valueType = type.valueType;\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralMapExpr(this, context);\n  }\n}\n\nfunction LiteralMapExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMapExpr.prototype.valueType;\n/** @type {?} */\nLiteralMapExpr.prototype.entries;\n}\n\n\nexport interface ExpressionVisitor {\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any;\n  visitWriteVarExpr(expr: WriteVarExpr, context: any): any;\n  visitWriteKeyExpr(expr: WriteKeyExpr, context: any): any;\n  visitWritePropExpr(expr: WritePropExpr, context: any): any;\n  visitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any;\n  visitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any;\n  visitInstantiateExpr(ast: InstantiateExpr, context: any): any;\n  visitLiteralExpr(ast: LiteralExpr, context: any): any;\n  visitExternalExpr(ast: ExternalExpr, context: any): any;\n  visitConditionalExpr(ast: ConditionalExpr, context: any): any;\n  visitNotExpr(ast: NotExpr, context: any): any;\n  visitCastExpr(ast: CastExpr, context: any): any;\n  visitFunctionExpr(ast: FunctionExpr, context: any): any;\n  visitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any;\n  visitReadPropExpr(ast: ReadPropExpr, context: any): any;\n  visitReadKeyExpr(ast: ReadKeyExpr, context: any): any;\n  visitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any;\n  visitLiteralMapExpr(ast: LiteralMapExpr, context: any): any;\n}\n\nexport const /** @type {?} */ THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\nexport const /** @type {?} */ SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\nexport const /** @type {?} */ CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\nexport const /** @type {?} */ CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\nexport const /** @type {?} */ NULL_EXPR = new LiteralExpr(null, null);\nexport const /** @type {?} */ TYPED_NULL_EXPR = new LiteralExpr(null, NULL_TYPE);\nexport type StmtModifier = number;\nexport let StmtModifier: any = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\n\n/**\n * @abstract\n */\nexport abstract class Statement {\n/**\n * @param {?=} modifiers\n */\nconstructor(public modifiers: StmtModifier[] = null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n  }\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any) {}\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: StmtModifier): boolean { return this.modifiers.indexOf(modifier) !== -1; }\n}\n\nfunction Statement_tsickle_Closure_declarations() {\n/** @type {?} */\nStatement.prototype.modifiers;\n}\n\nexport class DeclareVarStmt extends Statement {\npublic type: Type;\n/**\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic value: Expression, type: Type = null,\n      modifiers: StmtModifier[] = null) {\n    super(modifiers);\n    this.type = type || value.type;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareVarStmt(this, context);\n  }\n}\n\nfunction DeclareVarStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclareVarStmt.prototype.type;\n/** @type {?} */\nDeclareVarStmt.prototype.name;\n/** @type {?} */\nDeclareVarStmt.prototype.value;\n}\n\nexport class DeclareFunctionStmt extends Statement {\n/**\n * @param {?} name\n * @param {?} params\n * @param {?} statements\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic params: FnParam[],\npublic statements: Statement[],\npublic type: Type = null, modifiers: StmtModifier[] = null) {\n    super(modifiers);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareFunctionStmt(this, context);\n  }\n}\n\nfunction DeclareFunctionStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclareFunctionStmt.prototype.name;\n/** @type {?} */\nDeclareFunctionStmt.prototype.params;\n/** @type {?} */\nDeclareFunctionStmt.prototype.statements;\n/** @type {?} */\nDeclareFunctionStmt.prototype.type;\n}\n\nexport class ExpressionStatement extends Statement {\n/**\n * @param {?} expr\n */\nconstructor(public expr: Expression) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitExpressionStmt(this, context);\n  }\n}\n\nfunction ExpressionStatement_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionStatement.prototype.expr;\n}\n\nexport class ReturnStatement extends Statement {\n/**\n * @param {?} value\n */\nconstructor(public value: Expression) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitReturnStmt(this, context);\n  }\n}\n\nfunction ReturnStatement_tsickle_Closure_declarations() {\n/** @type {?} */\nReturnStatement.prototype.value;\n}\n\nexport class AbstractClassPart {\n/**\n * @param {?=} type\n * @param {?} modifiers\n */\nconstructor(public type: Type = null,\npublic modifiers: StmtModifier[]) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n  }\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: StmtModifier): boolean { return this.modifiers.indexOf(modifier) !== -1; }\n}\n\nfunction AbstractClassPart_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractClassPart.prototype.type;\n/** @type {?} */\nAbstractClassPart.prototype.modifiers;\n}\n\nexport class ClassField extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(public name: string, type: Type = null, modifiers: StmtModifier[] = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassField_tsickle_Closure_declarations() {\n/** @type {?} */\nClassField.prototype.name;\n}\n\nexport class ClassMethod extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic params: FnParam[],\npublic body: Statement[], type: Type = null,\n      modifiers: StmtModifier[] = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassMethod_tsickle_Closure_declarations() {\n/** @type {?} */\nClassMethod.prototype.name;\n/** @type {?} */\nClassMethod.prototype.params;\n/** @type {?} */\nClassMethod.prototype.body;\n}\n\nexport class ClassGetter extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?} body\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic body: Statement[], type: Type = null,\n      modifiers: StmtModifier[] = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassGetter_tsickle_Closure_declarations() {\n/** @type {?} */\nClassGetter.prototype.name;\n/** @type {?} */\nClassGetter.prototype.body;\n}\n\nexport class ClassStmt extends Statement {\n/**\n * @param {?} name\n * @param {?} parent\n * @param {?} fields\n * @param {?} getters\n * @param {?} constructorMethod\n * @param {?} methods\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic parent: Expression,\npublic fields: ClassField[],\npublic getters: ClassGetter[],\npublic constructorMethod: ClassMethod,\npublic methods: ClassMethod[], modifiers: StmtModifier[] = null) {\n    super(modifiers);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareClassStmt(this, context);\n  }\n}\n\nfunction ClassStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nClassStmt.prototype.name;\n/** @type {?} */\nClassStmt.prototype.parent;\n/** @type {?} */\nClassStmt.prototype.fields;\n/** @type {?} */\nClassStmt.prototype.getters;\n/** @type {?} */\nClassStmt.prototype.constructorMethod;\n/** @type {?} */\nClassStmt.prototype.methods;\n}\n\nexport class IfStmt extends Statement {\n/**\n * @param {?} condition\n * @param {?} trueCase\n * @param {?=} falseCase\n */\nconstructor(\npublic condition: Expression,\npublic trueCase: Statement[],\npublic falseCase: Statement[] = []) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitIfStmt(this, context);\n  }\n}\n\nfunction IfStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nIfStmt.prototype.condition;\n/** @type {?} */\nIfStmt.prototype.trueCase;\n/** @type {?} */\nIfStmt.prototype.falseCase;\n}\n\nexport class CommentStmt extends Statement {\n/**\n * @param {?} comment\n */\nconstructor(public comment: string) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitCommentStmt(this, context);\n  }\n}\n\nfunction CommentStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nCommentStmt.prototype.comment;\n}\n\nexport class TryCatchStmt extends Statement {\n/**\n * @param {?} bodyStmts\n * @param {?} catchStmts\n */\nconstructor(public bodyStmts: Statement[],\npublic catchStmts: Statement[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitTryCatchStmt(this, context);\n  }\n}\n\nfunction TryCatchStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nTryCatchStmt.prototype.bodyStmts;\n/** @type {?} */\nTryCatchStmt.prototype.catchStmts;\n}\n\nexport class ThrowStmt extends Statement {\n/**\n * @param {?} error\n */\nconstructor(public error: Expression) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitThrowStmt(this, context);\n  }\n}\n\nfunction ThrowStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nThrowStmt.prototype.error;\n}\n\n\nexport interface StatementVisitor {\n  visitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any;\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any;\n  visitExpressionStmt(stmt: ExpressionStatement, context: any): any;\n  visitReturnStmt(stmt: ReturnStatement, context: any): any;\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any;\n  visitIfStmt(stmt: IfStmt, context: any): any;\n  visitTryCatchStmt(stmt: TryCatchStmt, context: any): any;\n  visitThrowStmt(stmt: ThrowStmt, context: any): any;\n  visitCommentStmt(stmt: CommentStmt, context: any): any;\n}\nexport class ExpressionTransformer implements StatementVisitor, ExpressionVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any { return ast; }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteVarExpr(expr: WriteVarExpr, context: any): any {\n    return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteKeyExpr(expr: WriteKeyExpr, context: any): any {\n    return new WriteKeyExpr(\n        expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context),\n        expr.value.visitExpression(this, context));\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWritePropExpr(expr: WritePropExpr, context: any): any {\n    return new WritePropExpr(\n        expr.receiver.visitExpression(this, context), expr.name,\n        expr.value.visitExpression(this, context));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    const /** @type {?} */ method = ast.builtin || ast.name;\n    return new InvokeMethodExpr(\n        ast.receiver.visitExpression(this, context), method,\n        this.visitAllExpressions(ast.args, context), ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    return new InvokeFunctionExpr(\n        ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context),\n        ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    return new InstantiateExpr(\n        ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context),\n        ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralExpr(ast: LiteralExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExternalExpr(ast: ExternalExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    return new ConditionalExpr(\n        ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context),\n        ast.falseCase.visitExpression(this, context));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNotExpr(ast: NotExpr, context: any): any {\n    return new NotExpr(ast.condition.visitExpression(this, context));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCastExpr(ast: CastExpr, context: any): any {\n    return new CastExpr(ast.value.visitExpression(this, context), context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionExpr(ast: FunctionExpr, context: any): any {\n    // Don't descend into nested functions\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    return new BinaryOperatorExpr(\n        ast.operator, ast.lhs.visitExpression(this, context),\n        ast.rhs.visitExpression(this, context), ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    return new ReadKeyExpr(\n        ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context),\n        ast.type);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    const /** @type {?} */ entries = ast.entries.map(\n        (entry): LiteralMapEntry => new LiteralMapEntry(\n            entry.key, entry.value.visitExpression(this, context), entry.quoted));\n    return new LiteralMapExpr(entries);\n  }\n/**\n * @param {?} exprs\n * @param {?} context\n * @return {?}\n */\nvisitAllExpressions(exprs: Expression[], context: any): Expression[] {\n    return exprs.map(expr => expr.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    return new DeclareVarStmt(\n        stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitReturnStmt(stmt: ReturnStatement, context: any): any {\n    return new ReturnStatement(stmt.value.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitIfStmt(stmt: IfStmt, context: any): any {\n    return new IfStmt(\n        stmt.condition.visitExpression(this, context),\n        this.visitAllStatements(stmt.trueCase, context),\n        this.visitAllStatements(stmt.falseCase, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    return new TryCatchStmt(\n        this.visitAllStatements(stmt.bodyStmts, context),\n        this.visitAllStatements(stmt.catchStmts, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitThrowStmt(stmt: ThrowStmt, context: any): any {\n    return new ThrowStmt(stmt.error.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitCommentStmt(stmt: CommentStmt, context: any): any { return stmt; }\n/**\n * @param {?} stmts\n * @param {?} context\n * @return {?}\n */\nvisitAllStatements(stmts: Statement[], context: any): Statement[] {\n    return stmts.map(stmt => stmt.visitStatement(this, context));\n  }\n}\nexport class RecursiveExpressionVisitor implements StatementVisitor, ExpressionVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any { return ast; }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteVarExpr(expr: WriteVarExpr, context: any): any {\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteKeyExpr(expr: WriteKeyExpr, context: any): any {\n    expr.receiver.visitExpression(this, context);\n    expr.index.visitExpression(this, context);\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWritePropExpr(expr: WritePropExpr, context: any): any {\n    expr.receiver.visitExpression(this, context);\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    ast.fn.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    ast.classExpr.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralExpr(ast: LiteralExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExternalExpr(ast: ExternalExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    ast.trueCase.visitExpression(this, context);\n    ast.falseCase.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNotExpr(ast: NotExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCastExpr(ast: CastExpr, context: any): any {\n    ast.value.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionExpr(ast: FunctionExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    ast.lhs.visitExpression(this, context);\n    ast.rhs.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    ast.index.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    this.visitAllExpressions(ast.entries, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    ast.entries.forEach((entry) => entry.value.visitExpression(this, context));\n    return ast;\n  }\n/**\n * @param {?} exprs\n * @param {?} context\n * @return {?}\n */\nvisitAllExpressions(exprs: Expression[], context: any): void {\n    exprs.forEach(expr => expr.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    stmt.value.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    stmt.expr.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitReturnStmt(stmt: ReturnStatement, context: any): any {\n    stmt.value.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitIfStmt(stmt: IfStmt, context: any): any {\n    stmt.condition.visitExpression(this, context);\n    this.visitAllStatements(stmt.trueCase, context);\n    this.visitAllStatements(stmt.falseCase, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    this.visitAllStatements(stmt.bodyStmts, context);\n    this.visitAllStatements(stmt.catchStmts, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitThrowStmt(stmt: ThrowStmt, context: any): any {\n    stmt.error.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitCommentStmt(stmt: CommentStmt, context: any): any { return stmt; }\n/**\n * @param {?} stmts\n * @param {?} context\n * @return {?}\n */\nvisitAllStatements(stmts: Statement[], context: any): void {\n    stmts.forEach(stmt => stmt.visitStatement(this, context));\n  }\n}\n/**\n * @param {?} varName\n * @param {?} newValue\n * @param {?} expression\n * @return {?}\n */\nexport function replaceVarInExpression(\n    varName: string, newValue: Expression, expression: Expression): Expression {\n  const /** @type {?} */ transformer = new _ReplaceVariableTransformer(varName, newValue);\n  return expression.visitExpression(transformer, null);\n}\nclass _ReplaceVariableTransformer extends ExpressionTransformer {\n/**\n * @param {?} _varName\n * @param {?} _newValue\n */\nconstructor(private _varName: string,\nprivate _newValue: Expression) { super(); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any {\n    return ast.name == this._varName ? this._newValue : ast;\n  }\n}\n\nfunction _ReplaceVariableTransformer_tsickle_Closure_declarations() {\n/** @type {?} */\n_ReplaceVariableTransformer.prototype._varName;\n/** @type {?} */\n_ReplaceVariableTransformer.prototype._newValue;\n}\n\n/**\n * @param {?} stmts\n * @return {?}\n */\nexport function findReadVarNames(stmts: Statement[]): Set<string> {\n  const /** @type {?} */ finder = new _VariableFinder();\n  finder.visitAllStatements(stmts, null);\n  return finder.varNames;\n}\nclass _VariableFinder extends RecursiveExpressionVisitor {\n  varNames = new Set<string>();\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any {\n    this.varNames.add(ast.name);\n    return null;\n  }\n}\n\nfunction _VariableFinder_tsickle_Closure_declarations() {\n/** @type {?} */\n_VariableFinder.prototype.varNames;\n}\n\n/**\n * @param {?} name\n * @param {?=} type\n * @return {?}\n */\nexport function variable(name: string, type: Type = null): ReadVarExpr {\n  return new ReadVarExpr(name, type);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @return {?}\n */\nexport function importExpr(id: CompileIdentifierMetadata, typeParams: Type[] = null): ExternalExpr {\n  return new ExternalExpr(id, null, typeParams);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function importType(\n    id: CompileIdentifierMetadata, typeParams: Type[] = null,\n    typeModifiers: TypeModifier[] = null): ExpressionType {\n  return isPresent(id) ? expressionType(importExpr(id), typeParams, typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function expressionType(\n    expr: Expression, typeParams: Type[] = null,\n    typeModifiers: TypeModifier[] = null): ExpressionType {\n  return isPresent(expr) ? new ExpressionType(expr, typeParams, typeModifiers) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nexport function literalArr(values: Expression[], type: Type = null): LiteralArrayExpr {\n  return new LiteralArrayExpr(values, type);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nexport function literalMap(\n    values: [string, Expression][], type: MapType = null, quoted: boolean = false): LiteralMapExpr {\n  return new LiteralMapExpr(\n      values.map(entry => new LiteralMapEntry(entry[0], entry[1], quoted)), type);\n}\n/**\n * @param {?} expr\n * @return {?}\n */\nexport function not(expr: Expression): NotExpr {\n  return new NotExpr(expr);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @return {?}\n */\nexport function fn(params: FnParam[], body: Statement[], type: Type = null): FunctionExpr {\n  return new FunctionExpr(params, body, type);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nexport function literal(value: any, type: Type = null): LiteralExpr {\n  return new LiteralExpr(value, type);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}