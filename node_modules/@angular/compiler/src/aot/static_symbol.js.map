{"version":3,"file":"static_symbol.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/static_symbol.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH;IACA;;;;OAIG;IACH,sBAAmB,QAAgB,EAC5B,IAAY,EACZ,OAAkB;QAFN,aAAQ,GAAR,QAAQ,CAAQ;QAC5B,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAW;IAAG,CAAC;IAC7B,mBAAC;AAAD,CAAC,AATD,IASC;AAED;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,CAAC;AAED;;;GAGG;AACH;IAAA;QACQ,UAAK,GAAG,IAAI,GAAG,EAAwB,CAAC;IAkBhD,CAAC;IAjBD;;;;;OAKG;IACH,+BAAG,GAAH,UAAI,eAAuB,EAAE,IAAY,EAAE,OAAkB;QACzD,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QACxB,IAAM,gBAAgB,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,GAAG,MAAK,OAAO,CAAC,IAAI,CAAC,GAAG,CAAG,GAAG,EAAE,CAAC;QACrF,IAAM,gBAAgB,CAAC,GAAG,GAAG,OAAI,eAAe,WAAK,IAAI,GAAG,YAAc,CAAC;QAC3E,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,MAAM,GAAG,IAAI,YAAY,CAAC,eAAe,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC9B,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH,wBAAC;AAAD,CAAC,AAnBD,IAmBC;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;AAClC,CAAC","sourcesContent":["\n/**\n * A token representing the a reference to a static type.\n * \n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n/**\n * @param {?} filePath\n * @param {?} name\n * @param {?=} members\n */\nconstructor(public filePath: string,\npublic name: string,\npublic members?: string[]) {}\n}\n\nfunction StaticSymbol_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticSymbol.prototype.filePath;\n/** @type {?} */\nStaticSymbol.prototype.name;\n/** @type {?} */\nStaticSymbol.prototype.members;\n}\n\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nexport class StaticSymbolCache {\nprivate cache = new Map<string, StaticSymbol>();\n/**\n * @param {?} declarationFile\n * @param {?} name\n * @param {?=} members\n * @return {?}\n */\nget(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    members = members || [];\n    const /** @type {?} */ memberSuffix = members.length ? `.${ members.join('.')}` : '';\n    const /** @type {?} */ key = `\"${declarationFile}\".${name}${memberSuffix}`;\n    let /** @type {?} */ result = this.cache.get(key);\n    if (!result) {\n      result = new StaticSymbol(declarationFile, name, members);\n      this.cache.set(key, result);\n    }\n    return result;\n  }\n}\n\nfunction StaticSymbolCache_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticSymbolCache.prototype.cache;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}