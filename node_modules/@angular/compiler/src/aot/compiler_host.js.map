{"version":3,"file":"compiler_host.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/compiler_host.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ImportResolver} from '../output/path_util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolverHost} from './static_symbol_resolver';\nimport {AotSummaryResolverHost} from './summary_resolver';\nimport {AotSummarySerializerHost} from './summary_serializer';\n\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface AotCompilerHost extends StaticSymbolResolverHost, ImportResolver,\n    AotSummaryResolverHost, AotSummarySerializerHost {\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}