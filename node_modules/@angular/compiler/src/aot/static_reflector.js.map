{"version":3,"file":"static_reflector.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/static_reflector.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger} from '@angular/core';\n\nimport {ReflectorReader} from '../private_import_core';\nimport {SyntaxError} from '../util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst /** @type {?} */ ANGULAR_IMPORT_LOCATIONS = {\n  coreDecorators: '@angular/core/src/metadata',\n  diDecorators: '@angular/core/src/di/metadata',\n  diMetadata: '@angular/core/src/di/metadata',\n  diOpaqueToken: '@angular/core/src/di/opaque_token',\n  animationMetadata: '@angular/core/src/animation/metadata',\n  provider: '@angular/core/src/di/provider'\n};\n\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements ReflectorReader {\nprivate annotationCache = new Map<StaticSymbol, any[]>();\nprivate propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\nprivate parameterCache = new Map<StaticSymbol, any[]>();\nprivate methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\nprivate conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\nprivate opaqueToken: StaticSymbol;\n/**\n * @param {?} symbolResolver\n * @param {?=} knownMetadataClasses\n * @param {?=} knownMetadataFunctions\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\nprivate errorRecorder?: (error: any, fileName: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: StaticSymbol): string {\n    const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return staticSymbol ? staticSymbol.filePath : null;\n  }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string): StaticSymbol {\n    return this.findDeclaration(moduleUrl, name);\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @param {?=} containingFile\n * @return {?}\n */\nfindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n/**\n * @param {?} symbol\n * @return {?}\n */\nfindSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      return this.findSymbolDeclaration(resolvedSymbol.metadata);\n    } else {\n      return symbol;\n    }\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any {\n    const /** @type {?} */ staticSymbol: StaticSymbol = enumIdentifier;\n    return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, [name]);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic annotations(type: StaticSymbol): any[] {\n    let /** @type {?} */ annotations = this.annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentAnnotations = this.annotations(this.simplify(type, classMetadata['extends']));\n        annotations.push(...parentAnnotations);\n      }\n      if (classMetadata['decorators']) {\n        const /** @type {?} */ ownAnnotations: any[] = this.simplify(type, classMetadata['decorators']);\n        annotations.push(...ownAnnotations);\n      }\n      this.annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentPropMetadata = this.propMetadata(this.simplify(type, classMetadata['extends']));\n        Object.keys(parentPropMetadata).forEach((parentProp) => {\n          propMetadata[parentProp] = parentPropMetadata[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ prop = ( /** @type {?} */((<any[]>propData)))\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata[propName]) {\n          decorators.push(...propMetadata[propName]);\n        }\n        propMetadata[propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let /** @type {?} */ parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n        const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n        const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const /** @type {?} */ ctor = ( /** @type {?} */((<any[]>ctorData))).find(a => a['__symbolic'] == 'constructor');\n          const /** @type {?} */ parameterTypes = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameters'] || [])));\n          const /** @type {?} */ parameterDecorators = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameterDecorators'] || [])));\n          parameters = [];\n          parameterTypes.forEach((paramType, index) => {\n            const /** @type {?} */ nestedResult: any[] = [];\n            if (paramType) {\n              nestedResult.push(paramType);\n            }\n            const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            }\n            parameters.push(nestedResult);\n          });\n        } else if (classMetadata['extends']) {\n          parameters = this.parameters(this.simplify(type, classMetadata['extends']));\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _methodNames(type: any): {[key: string]: boolean} {\n    let /** @type {?} */ methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentMethodNames = this._methodNames(this.simplify(type, classMetadata['extends']));\n        Object.keys(parentMethodNames).forEach((parentProp) => {\n          methodNames[parentProp] = parentMethodNames[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ isMethod = ( /** @type {?} */((<any[]>propData))).some(a => a['__symbolic'] == 'method');\n        methodNames[propName] = methodNames[propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctor\n * @return {?}\n */\nprivate _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n/**\n * @param {?} type\n * @param {?} fn\n * @return {?}\n */\nprivate _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n/**\n * @return {?}\n */\nprivate initializeConversionMap(): void {\n    const {coreDecorators, diDecorators, diMetadata, diOpaqueToken, animationMetadata, provider} =\n        ANGULAR_IMPORT_LOCATIONS;\n    this.opaqueToken = this.findDeclaration(diOpaqueToken, 'OpaqueToken');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Host'), Host);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(diDecorators, 'Injectable'), Injectable);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Inject'), Inject);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Optional'), Optional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Attribute'), Attribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChild'), ContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChildren'), ContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChild'), ViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChildren'), ViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Input'), Input);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Output'), Output);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Pipe'), Pipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostBinding'), HostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostListener'), HostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Directive'), Directive);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Component'), Component);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'NgModule'), NgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Host'), Host);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Optional'), Optional);\n\n    this._registerFunction(this.findDeclaration(animationMetadata, 'trigger'), trigger);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'state'), state);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'transition'), transition);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'style'), style);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'animate'), animate);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'keyframes'), keyframes);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'sequence'), sequence);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'group'), group);\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n/**\n * @param {?} error\n * @param {?} context\n * @param {?=} path\n * @return {?}\n */\nprivate reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * \\@internal\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\npublic simplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ scope = BindingScope.empty;\n    const /** @type {?} */ calling = new Map<StaticSymbol, boolean>();\n/**\n * @param {?} context\n * @param {?} value\n * @param {?} depth\n * @return {?}\n */\nfunction simplifyInContext(context: StaticSymbol, value: any, depth: number): any {\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nfunction resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n/**\n * @param {?} functionSymbol\n * @param {?} targetFunction\n * @param {?} args\n * @return {?}\n */\nfunction simplifyCall(functionSymbol: StaticSymbol, targetFunction: any, args: any[]) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            throw new Error('Recursion not supported');\n          }\n          calling.set(functionSymbol, true);\n          try {\n            const /** @type {?} */ value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const /** @type {?} */ parameters: string[] = targetFunction['parameters'];\n              const /** @type {?} */ defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyInContext(context, arg, depth + 1));\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              const /** @type {?} */ functionScope = BindingScope.build();\n              for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const /** @type {?} */ oldScope = scope;\n              let /** @type {?} */ result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyInContext(functionSymbol, value, depth + 1);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return {__symbolic: 'ignore'};\n        }\n        return simplify(\n            {__symbolic: 'error', message: 'Function call not supported', context: functionSymbol});\n      }\n/**\n * @param {?} expression\n * @return {?}\n */\nfunction simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const /** @type {?} */ result: any[] = [];\n          for (const /** @type {?} */ item of ( /** @type {?} */((<any>expression)))) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              const /** @type {?} */ spreadArray = simplify(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const /** @type {?} */ spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const /** @type {?} */ value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols\n          if (expression === self.opaqueToken || self.conversionMap.has(expression)) {\n            return expression;\n          } else {\n            const /** @type {?} */ staticSymbol = expression;\n            const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue) {\n              return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let /** @type {?} */ staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let /** @type {?} */ left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let /** @type {?} */ right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let /** @type {?} */ condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let /** @type {?} */ operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let /** @type {?} */ indexTarget = simplify(expression['expression']);\n                let /** @type {?} */ index = simplify(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const /** @type {?} */ member = expression['member'];\n                let /** @type {?} */ selectContext = context;\n                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const /** @type {?} */ members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue) {\n                    return simplifyInContext(selectContext, declarationValue, depth + 1);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references,\n                // as symbol references have been converted into StaticSymbols already\n                // in the StaticSymbolResolver!\n                const /** @type {?} */ name: string = expression['name'];\n                const /** @type {?} */ localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.opaqueToken) {\n                    // if somebody calls new OpaqueToken, don't create an OpaqueToken,\n                    // but rather return the symbol to which the OpaqueToken is assigned to.\n                    return context;\n                  }\n                  const /** @type {?} */ argExpressions: any[] = expression['arguments'] || [];\n                  let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const /** @type {?} */ args =\n                        argExpressions.map(arg => simplifyInContext(context, arg, depth + 1));\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                  }\n                }\n                break;\n              case 'error':\n                let /** @type {?} */ message = produceErrorMessage(expression);\n                if (expression['line']) {\n                  message =\n                      `${message} (position ${expression['line']+1}:${expression['character']+1} in the original .ts file)`;\n                  throw positionalError(\n                      message, context.filePath, expression['line'], expression['character']);\n                }\n                throw new Error(message);\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => simplify(value));\n        }\n        return null;\n      }\n\n      try {\n        return simplify(value);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n        const /** @type {?} */ message =\n            `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n        if (e.fileName) {\n          throw positionalError(message, e.fileName, e.line, e.column);\n        }\n        throw new SyntaxError(message);\n      }\n    }\n\n    const /** @type {?} */ recordedSimplifyInContext = (context: StaticSymbol, value: any, depth: number) => {\n      try {\n        return simplifyInContext(context, value, depth);\n      } catch ( /** @type {?} */e) {\n        this.reportError(e, context);\n      }\n    };\n\n    const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n                                        simplifyInContext(context, value, 0);\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n}\n\nfunction StaticReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticReflector.prototype.annotationCache;\n/** @type {?} */\nStaticReflector.prototype.propertyCache;\n/** @type {?} */\nStaticReflector.prototype.parameterCache;\n/** @type {?} */\nStaticReflector.prototype.methodCache;\n/** @type {?} */\nStaticReflector.prototype.conversionMap;\n/** @type {?} */\nStaticReflector.prototype.opaqueToken;\n/** @type {?} */\nStaticReflector.prototype.symbolResolver;\n/** @type {?} */\nStaticReflector.prototype.errorRecorder;\n}\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let /** @type {?} */ prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n      break;\n  }\n  return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error: any): string {\n  return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const /** @type {?} */ value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n/**\n * @abstract\n */\nabstract class BindingScope {\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nresolve(name: string) {}\npublic static missing = {};\npublic static empty: BindingScope = {resolve: name => BindingScope.missing};\n/**\n * @return {?}\n */\npublic static build(): BindingScopeBuilder {\n    const /** @type {?} */ current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nfunction BindingScope_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScope.missing;\n/** @type {?} */\nBindingScope.empty;\n}\n\nclass PopulatedScope extends BindingScope {\n/**\n * @param {?} bindings\n */\nconstructor(private bindings: Map<string, any>) { super(); }\n/**\n * @param {?} name\n * @return {?}\n */\nresolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction PopulatedScope_tsickle_Closure_declarations() {\n/** @type {?} */\nPopulatedScope.prototype.bindings;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message: string, fileName: string, line: number, column: number): Error {\n  const /** @type {?} */ result = new Error(message);\n  ( /** @type {?} */((result as any))).fileName = fileName;\n  ( /** @type {?} */((result as any))).line = line;\n  ( /** @type {?} */((result as any))).column = column;\n  return result;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}