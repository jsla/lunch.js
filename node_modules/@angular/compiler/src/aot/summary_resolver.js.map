{"version":3,"file":"summary_resolver.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/summary_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Summary, SummaryResolver} from '../summary_resolver';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {ResolvedStaticSymbol} from './static_symbol_resolver';\nimport {deserializeSummaries, summaryFileName} from './summary_serializer';\n\nconst /** @type {?} */ STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\n\nexport interface AotSummaryResolverHost {\n  /**\n   * Loads an NgModule/Directive/Pipe summary file\n   */\n  loadSummary(filePath: string): string /*|null*/;\n\n  /**\n   * Returns whether a file is a source file or not.\n   */\n  isSourceFile(sourceFilePath: string): boolean;\n}\nexport class AotSummaryResolver implements SummaryResolver<StaticSymbol> {\nprivate summaryCache = new Map<StaticSymbol, Summary<StaticSymbol>>();\nprivate loadedFilePaths = new Set<string>();\n/**\n * @param {?} host\n * @param {?} staticSymbolCache\n */\nconstructor(private host: AotSummaryResolverHost,\nprivate staticSymbolCache: StaticSymbolCache) {}\n/**\n * @param {?} symbol\n * @return {?}\n */\nprivate _assertNoMembers(symbol: StaticSymbol) {\n    if (symbol.members.length) {\n      throw new Error(\n          `Internal state: StaticSymbols in summaries can't have members! ${JSON.stringify(symbol)}`);\n    }\n  }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nresolveSummary(staticSymbol: StaticSymbol): Summary<StaticSymbol> {\n    this._assertNoMembers(staticSymbol);\n    let /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n    if (!summary) {\n      this._loadSummaryFile(staticSymbol.filePath);\n      summary = this.summaryCache.get(staticSymbol);\n    }\n    return summary;\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetSymbolsOf(filePath: string): StaticSymbol[] {\n    this._loadSummaryFile(filePath);\n    return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\nprivate _loadSummaryFile(filePath: string) {\n    if (this.loadedFilePaths.has(filePath)) {\n      return;\n    }\n    this.loadedFilePaths.add(filePath);\n    if (!this.host.isSourceFile(filePath)) {\n      const /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n      let /** @type {?} */ json: string;\n      try {\n        json = this.host.loadSummary(summaryFilePath);\n      } catch ( /** @type {?} */e) {\n        console.error(`Error loading summary file ${summaryFilePath}`);\n        throw e;\n      }\n      if (json) {\n        const /** @type {?} */ readSummaries = deserializeSummaries(this.staticSymbolCache, json);\n        readSummaries.forEach((summary) => { this.summaryCache.set(summary.symbol, summary); });\n      }\n    }\n  }\n}\n\nfunction AotSummaryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAotSummaryResolver.prototype.summaryCache;\n/** @type {?} */\nAotSummaryResolver.prototype.loadedFilePaths;\n/** @type {?} */\nAotSummaryResolver.prototype.host;\n/** @type {?} */\nAotSummaryResolver.prototype.staticSymbolCache;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}