{"version":3,"file":"browser_xhr.js","sourceRoot":"","sources":["../../../../../modules/@angular/http/src/backends/browser_xhr.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;AACxC;;;;;;GAMG;AACH;IACA;IAAe,CAAC;IAChB;;OAEG;IACH,0BAAK,GAAL,cAAe,MAAM,CAAiB,CAAQ,CAAC,IAAI,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC,CAAC;IAClE,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iBAAC;AAAD,CAAC,AAZD,IAYC;AAED;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n * \n * Take care not to evaluate this in non-browser contexts.\n * \n * \\@experimental\n */\nexport class BrowserXhr {\nconstructor() {}\n/**\n * @return {?}\n */\nbuild(): any { return /** @type {?} */(( <any>(new XMLHttpRequest()))); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserXhr.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}