{"version":3,"file":"view_animation_map.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/animation/view_animation_map.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isPresent} from '../facade/lang';\n\nimport {AnimationPlayer} from './animation_player';\nexport class ViewAnimationMap {\nprivate _map = new Map<any, {[key: string]: AnimationPlayer}>();\nprivate _allPlayers: AnimationPlayer[] = [];\n/**\n * @param {?} element\n * @param {?} animationName\n * @return {?}\n */\nfind(element: any, animationName: string): AnimationPlayer {\n    const /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (isPresent(playersByAnimation)) {\n      return playersByAnimation[animationName];\n    }\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nfindAllPlayersByElement(element: any): AnimationPlayer[] {\n    const /** @type {?} */ el = this._map.get(element);\n\n    return el ? Object.keys(el).map(k => el[k]) : [];\n  }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?} player\n * @return {?}\n */\nset(element: any, animationName: string, player: AnimationPlayer): void {\n    let /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (!isPresent(playersByAnimation)) {\n      playersByAnimation = {};\n    }\n    const /** @type {?} */ existingEntry = playersByAnimation[animationName];\n    if (isPresent(existingEntry)) {\n      this.remove(element, animationName);\n    }\n    playersByAnimation[animationName] = player;\n    this._allPlayers.push(player);\n    this._map.set(element, playersByAnimation);\n  }\n/**\n * @return {?}\n */\ngetAllPlayers(): AnimationPlayer[] { return this._allPlayers; }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?=} targetPlayer\n * @return {?}\n */\nremove(element: any, animationName: string, targetPlayer: AnimationPlayer = null): void {\n    const /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (playersByAnimation) {\n      const /** @type {?} */ player = playersByAnimation[animationName];\n      if (!targetPlayer || player === targetPlayer) {\n        delete playersByAnimation[animationName];\n        const /** @type {?} */ index = this._allPlayers.indexOf(player);\n        this._allPlayers.splice(index, 1);\n\n        if (Object.keys(playersByAnimation).length === 0) {\n          this._map.delete(element);\n        }\n      }\n    }\n  }\n}\n\nfunction ViewAnimationMap_tsickle_Closure_declarations() {\n/** @type {?} */\nViewAnimationMap.prototype._map;\n/** @type {?} */\nViewAnimationMap.prototype._allPlayers;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}