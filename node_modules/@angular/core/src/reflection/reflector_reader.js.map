{"version":3,"file":"reflector_reader.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/reflection/reflector_reader.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH;IAAA;IAwCA,CAAC;IAvCD;;;;OAIG;IACH,oCAAU,GAAV,UAAW,UAAwB,IAAG,CAAC;IACvC;;;;OAIG;IACH,qCAAW,GAAX,UAAY,UAAwB,IAAG,CAAC;IACxC;;;;OAIG;IACH,sCAAY,GAAZ,UAAa,UAAwB,IAAG,CAAC;IACzC;;;;OAIG;IACH,mCAAS,GAAT,UAAU,UAAwB,IAAG,CAAC;IACtC;;;;;;OAMG;IACH,2CAAiB,GAAjB,UAAkB,IAAY,EAAE,SAAiB,EAAE,OAAY,IAAG,CAAC;IACnE;;;;;OAKG;IACH,qCAAW,GAAX,UAAY,UAAe,EAAE,IAAY,IAAG,CAAC;IAC7C,sBAAC;AAAD,CAAC,AAxCD,IAwCC","sourcesContent":["\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n * @abstract\n */\nexport abstract class ReflectorReader {\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, runtime: any) {}\n/**\n * @abstract\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}