{"version":3,"file":"default_keyvalue_differ.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/change_detection/differs/default_keyvalue_differ.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StringMapWrapper} from '../../facade/collection';\nimport {isJsObject, looseIdentical, stringify} from '../../facade/lang';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n/**\n * @param {?} cdRef\n * @return {?}\n */\ncreate(cdRef: ChangeDetectorRef): KeyValueDiffer { return new DefaultKeyValueDiffer(); }\n}\nexport class DefaultKeyValueDiffer implements KeyValueDiffer {\nprivate _records: Map<any, any> = new Map();\nprivate _mapHead: KeyValueChangeRecord = null;\nprivate _previousMapHead: KeyValueChangeRecord = null;\nprivate _changesHead: KeyValueChangeRecord = null;\nprivate _changesTail: KeyValueChangeRecord = null;\nprivate _additionsHead: KeyValueChangeRecord = null;\nprivate _additionsTail: KeyValueChangeRecord = null;\nprivate _removalsHead: KeyValueChangeRecord = null;\nprivate _removalsTail: KeyValueChangeRecord = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} map\n * @return {?}\n */\ndiff(map: Map<any, any>|{[k: string]: any}): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${map}'`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n    const /** @type {?} */ records = this._records;\n    let /** @type {?} */ oldSeqRecord: KeyValueChangeRecord = this._mapHead;\n    let /** @type {?} */ lastOldSeqRecord: KeyValueChangeRecord = null;\n    let /** @type {?} */ lastNewSeqRecord: KeyValueChangeRecord = null;\n    let /** @type {?} */ seqChanged: boolean = false;\n\n    this._forEach(map, (value: any, key: any) => {\n      let /** @type {?} */ newSeqRecord: any;\n      if (oldSeqRecord && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        this._maybeAddToChanges(newSeqRecord, value);\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (records.has(key)) {\n          newSeqRecord = records.get(key);\n          this._maybeAddToChanges(newSeqRecord, value);\n        } else {\n          newSeqRecord = new KeyValueChangeRecord(key);\n          records.set(key, newSeqRecord);\n          newSeqRecord.currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} lastRecord\n * @param {?} record\n * @return {?}\n */\n_truncate(lastRecord: KeyValueChangeRecord, record: KeyValueChangeRecord) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      const /** @type {?} */ nextRecord = record._next;\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (let /** @type {?} */ rec: KeyValueChangeRecord = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n      rec.previousValue = rec.currentValue;\n      rec.currentValue = null;\n      this._records.delete(rec.key);\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_isInRemovals(record: KeyValueChangeRecord) {\n    return record === this._removalsHead || record._nextRemoved !== null ||\n        record._prevRemoved !== null;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_addToRemovals(record: KeyValueChangeRecord) {\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n/**\n * \\@internal\n * @param {?} prev\n * @param {?} record\n * @return {?}\n */\n_removeFromSeq(prev: KeyValueChangeRecord, record: KeyValueChangeRecord) {\n    const /** @type {?} */ next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    record._next = null;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_removeFromRemovals(record: KeyValueChangeRecord) {\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_addToAdditions(record: KeyValueChangeRecord) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_addToChanges(record: KeyValueChangeRecord) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ items: any[] = [];\n    const /** @type {?} */ previous: any[] = [];\n    const /** @type {?} */ changes: any[] = [];\n    const /** @type {?} */ additions: any[] = [];\n    const /** @type {?} */ removals: any[] = [];\n    let /** @type {?} */ record: KeyValueChangeRecord;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      items.push(stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      previous.push(stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      changes.push(stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      additions.push(stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      removals.push(stringify(record));\n    }\n\n    return 'map: ' + items.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'changes: ' + changes.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n';\n  }\n/**\n * \\@internal\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nexport class KeyValueChangeRecord {\n  previousValue: any = null;\n  currentValue: any = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord = null;\n  /** @internal */\n  _next: KeyValueChangeRecord = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord = null;\n  /** @internal */\n  _prevRemoved: KeyValueChangeRecord = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord = null;\n/**\n * @param {?} key\n */\nconstructor(public key: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return looseIdentical(this.previousValue, this.currentValue) ?\n        stringify(this.key) :\n        (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n         stringify(this.currentValue) + ']');\n  }\n}\n\nfunction KeyValueChangeRecord_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord.prototype.key;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}