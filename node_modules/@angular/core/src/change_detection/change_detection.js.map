{"version":3,"file":"change_detection.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/change_detection/change_detection.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;OACvE,EAAC,4BAA4B,EAAuB,MAAM,mCAAmC;OAC7F,EAAwB,eAAe,EAAC,MAAM,4BAA4B;OAC1E,EAAwB,eAAe,EAAC,MAAM,4BAA4B;AAGjF,SAAQ,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,QAAO,yBAAyB,CAAC;AAChI,SAAQ,iBAAiB,QAAO,uBAAuB,CAAC;AACxD,SAAQ,uBAAuB,EAAE,oBAAoB,EAAE,gCAAgC,QAAO,aAAa,CAAC;AAC5G,SAAQ,sBAAsB,EAAE,4BAA4B,QAAO,mCAAmC,CAAC;AACvG,SAAQ,qBAAqB,QAAO,mCAAmC,CAAC;AACxE,SAAQ,4BAA4B,EAAE,oBAAoB,QAAO,mCAAmC,CAAC;AACrG,SAA+C,eAAe,QAAkB,4BAA4B,CAAC;AAC7G,SAA+C,eAAe,QAAO,4BAA4B,CAAC;AAKlG;;GAEG;AACH,OAAO,IAAM,gBAAgB,CAAC,UAAU,GAA4B,CAAC,IAAI,4BAA4B,EAAE,CAAC,CAAC;AAEzG;;GAEG;AACH,OAAO,IAAM,gBAAgB,CAAC,YAAY,GAA4B,CAAC,IAAI,4BAA4B,EAAE,CAAC,CAAC;AAE3G,OAAO,IAAM,gBAAgB,CAAC,sBAAsB,GAAG,IAAI,eAAe,CAAC,YAAY,CAAC,CAAC;AAEzF,OAAO,IAAM,gBAAgB,CAAC,sBAAsB,GAAG,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory, KeyValueChangeRecord} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, UNINITIALIZED, ValueUnwrapper, WrappedValue, devModeEqual, looseIdentical} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {CollectionChangeRecord, DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory, KeyValueChangeRecord} from './differs/default_keyvalue_differ';\nexport {IterableDiffer, IterableDifferFactory, IterableDiffers, TrackByFn} from './differs/iterable_differs';\nexport {KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nexport const /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nexport const /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}