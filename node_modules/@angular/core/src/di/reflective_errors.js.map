{"version":3,"file":"reflective_errors.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/di/reflective_errors.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BaseError, WrappedError} from '../facade/errors';\nimport {stringify} from '../facade/lang';\nimport {Type} from '../type';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n/**\n * Base class for all errors arising from misconfigured providers.\n * \\@stable\n */\nexport class AbstractProviderError extends BaseError {\n  /** @internal */\n  message: string;\n\n  /** @internal */\n  keys: ReflectiveKey[];\n\n  /** @internal */\n  injectors: ReflectiveInjector[];\n\n  /** @internal */\n  constructResolvingMessage: Function;\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n */\nconstructor(\n      injector: ReflectiveInjector, key: ReflectiveKey, constructResolvingMessage: Function) {\n    super('DI Error');\n    this.keys = [key];\n    this.injectors = [injector];\n    this.constructResolvingMessage = constructResolvingMessage;\n    this.message = this.constructResolvingMessage(this.keys);\n  }\n/**\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\naddKey(injector: ReflectiveInjector, key: ReflectiveKey): void {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    this.message = this.constructResolvingMessage(this.keys);\n  }\n}\n\nfunction AbstractProviderError_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractProviderError.prototype.message;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractProviderError.prototype.keys;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractProviderError.prototype.injectors;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractProviderError.prototype.constructResolvingMessage;\n}\n\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \\@stable\n */\nexport class NoProviderError extends AbstractProviderError {\n/**\n * @param {?} injector\n * @param {?} key\n */\nconstructor(injector: ReflectiveInjector, key: ReflectiveKey) {\n    super(injector, key, function(keys: any[]) {\n      const first = stringify(keys[0].token);\n      return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n  }\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * \\@stable\n */\nexport class CyclicDependencyError extends AbstractProviderError {\n/**\n * @param {?} injector\n * @param {?} key\n */\nconstructor(injector: ReflectiveInjector, key: ReflectiveKey) {\n    super(injector, key, function(keys: any[]) {\n      return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n  }\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * \\@stable\n */\nexport class InstantiationError extends WrappedError {\n  /** @internal */\n  keys: ReflectiveKey[];\n\n  /** @internal */\n  injectors: ReflectiveInjector[];\n/**\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n */\nconstructor(\n      injector: ReflectiveInjector, originalException: any, originalStack: any,\n      key: ReflectiveKey) {\n    super('DI Error', originalException);\n    this.keys = [key];\n    this.injectors = [injector];\n  }\n/**\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\naddKey(injector: ReflectiveInjector, key: ReflectiveKey): void {\n    this.injectors.push(injector);\n    this.keys.push(key);\n  }\n/**\n * @return {?}\n */\nget message(): string {\n    const /** @type {?} */ first = stringify(this.keys[0].token);\n    return `${this.originalError.message}: Error during instantiation of ${first}!${constructResolvingPath(this.keys)}.`;\n  }\n/**\n * @return {?}\n */\nget causeKey(): ReflectiveKey { return this.keys[0]; }\n}\n\nfunction InstantiationError_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nInstantiationError.prototype.keys;\n/**\n * \\@internal\n * @type {?}\n */\nInstantiationError.prototype.injectors;\n}\n\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * \\@stable\n */\nexport class InvalidProviderError extends BaseError {\n/**\n * @param {?} provider\n */\nconstructor(provider: any) {\n    super(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n  }\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n */\nexport class NoAnnotationError extends BaseError {\n/**\n * @param {?} typeOrFunc\n * @param {?} params\n */\nconstructor(typeOrFunc: Type<any>|Function, params: any[][]) {\n    super(NoAnnotationError._genMessage(typeOrFunc, params));\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nprivate static _genMessage(typeOrFunc: Type<any>|Function, params: any[][]) {\n    const /** @type {?} */ signature: string[] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n      const /** @type {?} */ parameter = params[i];\n      if (!parameter || parameter.length == 0) {\n        signature.push('?');\n      } else {\n        signature.push(parameter.map(stringify).join(' '));\n      }\n    }\n    return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n  }\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n */\nexport class OutOfBoundsError extends BaseError {\n/**\n * @param {?} index\n */\nconstructor(index: number) { super(`Index ${index} is out-of-bounds.`); }\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nexport class MixingMultiProvidersWithRegularProvidersError extends BaseError {\n/**\n * @param {?} provider1\n * @param {?} provider2\n */\nconstructor(provider1: any, provider2: any) {\n    super(\n        'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n        provider2.toString());\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}