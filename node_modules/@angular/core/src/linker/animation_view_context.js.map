{"version":3,"file":"animation_view_context.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/animation_view_context.ts"],"names":[],"mappings":"OAOO,EAAC,oBAAoB,EAAC,MAAM,qCAAqC;OAGjE,EAAC,uBAAuB,EAAC,MAAM,wCAAwC;OACvE,EAAC,gBAAgB,EAAC,MAAM,iCAAiC;AAChE;IAEA;;OAEG;IACH,8BAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAJ3C,aAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;IAIY,CAAC;IACvD;;;OAGG;IACH,wDAAyB,GAAzB,UAA0B,QAAmB;QACzC,IAAM,gBAAgB,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAC9E,+DAA+D;QAC/D,iEAAiE;QACjE,EAAE,CAAC,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,IAAI,oBAAoB,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,cAAM,OAAA,QAAQ,EAAE,EAAV,CAAU,CAAC,CAAC;QAC5E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,QAAQ,EAAE,CAAC;QACb,CAAC;IACH,CAAC;IACH;;;;;OAKG;IACH,6CAAc,GAAd,UAAe,OAAY,EAAE,aAAqB,EAAE,MAAuB;QAA3E,iBAIG;QAHC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC,EAApD,CAAoD,CAAC,CAAC;IAC5E,CAAC;IACH;;;;OAIG;IACH,kDAAmB,GAAnB,UAAoB,OAAY,EAAE,aAA4B;QAA5B,6BAA4B,GAA5B,oBAA4B;QAC1D,IAAM,gBAAgB,CAAC,OAAO,GAAsB,EAAE,CAAC;QACvD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,IAAM,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YAClF,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,eAAe,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,OAAO,CAClD,UAAA,MAAM,IAAI,OAAA,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,EAAhC,CAAgC,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACH,2BAAC;AAAD,CAAC,AAjDD,IAiDC;AAED;IACA,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACxC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,eAAe,CAAC;AAC/C,CAAC;AAED;;;;GAIG;AACH,yBAAyB,MAAuB,EAAE,gBAAmC;IACnF,EAAE,CAAC,CAAC,CAAC,MAAM,YAAY,oBAAoB,CAAC,IAAI,CAAC,MAAM,YAAY,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAC5F,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,EAAzC,CAAyC,CAAC,CAAC;IAC9E,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationGroupPlayer} from '../animation/animation_group_player';\nimport {AnimationPlayer} from '../animation/animation_player';\nimport {AnimationQueue} from '../animation/animation_queue';\nimport {AnimationSequencePlayer} from '../animation/animation_sequence_player';\nimport {ViewAnimationMap} from '../animation/view_animation_map';\nexport class AnimationViewContext {\nprivate _players = new ViewAnimationMap();\n/**\n * @param {?} _animationQueue\n */\nconstructor(private _animationQueue: AnimationQueue) {}\n/**\n * @param {?} callback\n * @return {?}\n */\nonAllActiveAnimationsDone(callback: () => any): void {\n    const /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n    // we check for the length to avoid having GroupAnimationPlayer\n    // issue an unnecessary microtask when zero players are passed in\n    if (activeAnimationPlayers.length) {\n      new AnimationGroupPlayer(activeAnimationPlayers).onDone(() => callback());\n    } else {\n      callback();\n    }\n  }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?} player\n * @return {?}\n */\nqueueAnimation(element: any, animationName: string, player: AnimationPlayer): void {\n    this._animationQueue.enqueue(player);\n    this._players.set(element, animationName, player);\n    player.onDone(() => this._players.remove(element, animationName, player));\n  }\n/**\n * @param {?} element\n * @param {?=} animationName\n * @return {?}\n */\ngetAnimationPlayers(element: any, animationName: string = null): AnimationPlayer[] {\n    const /** @type {?} */ players: AnimationPlayer[] = [];\n    if (animationName) {\n      const /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n      if (currentPlayer) {\n        _recursePlayers(currentPlayer, players);\n      }\n    } else {\n      this._players.findAllPlayersByElement(element).forEach(\n          player => _recursePlayers(player, players));\n    }\n    return players;\n  }\n}\n\nfunction AnimationViewContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationViewContext.prototype._players;\n/** @type {?} */\nAnimationViewContext.prototype._animationQueue;\n}\n\n/**\n * @param {?} player\n * @param {?} collectedPlayers\n * @return {?}\n */\nfunction _recursePlayers(player: AnimationPlayer, collectedPlayers: AnimationPlayer[]) {\n  if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n    player.players.forEach(player => _recursePlayers(player, collectedPlayers));\n  } else {\n    collectedPlayers.push(player);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}