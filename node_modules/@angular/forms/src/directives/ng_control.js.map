{"version":3,"file":"ng_control.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/ng_control.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAGI,EAAC,wBAAwB,EAAC,MAAM,8BAA8B;AAIrE;;GAEG;AACH;IACE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACnC,CAAC;AACD;;;;;;;;GAQG;AACH;IAAwC,6BAAwB;IAAhE;QAAwC,8BAAwB;QAC9D,gBAAgB;QAChB,YAAO,GAAqB,IAAI,CAAC;QACjC,SAAI,GAAW,IAAI,CAAC;QACpB,kBAAa,GAAyB,IAAI,CAAC;QAC3C,gBAAgB;QAChB,mBAAc,GAAiC,EAAE,CAAC;QAClD,gBAAgB;QAChB,wBAAmB,GAAiC,EAAE,CAAC;IAezD,CAAC;IAXD,sBAAI,gCAAS;QAHb;;WAEG;aACH,cAA+B,MAAM,CAAiB,CAAgB,aAAa,EAAG,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAI1F,sBAAI,qCAAc;QAHlB;;WAEG;aACH,cAAyC,MAAM,CAAiB,CAAqB,aAAa,EAAG,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACzG;;;;OAIG;IACH,qCAAiB,GAAjB,UAAkB,QAAa,IAAG,CAAC;IACnC,gBAAC;AAAD,CAAC,AAvBD,CAAwC,wBAAwB,GAuB/D;AAED;IACA;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;IAC5B,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;IACzB,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC;IAClC;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC;AACxC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @return {?}\n */\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n * \n * Used internally by Angular forms.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgControl extends AbstractControlDirective {\n  /** @internal */\n  _parent: ControlContainer = null;\n  name: string = null;\n  valueAccessor: ControlValueAccessor = null;\n  /** @internal */\n  _rawValidators: Array<Validator|ValidatorFn> = [];\n  /** @internal */\n  _rawAsyncValidators: Array<Validator|ValidatorFn> = [];\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return /** @type {?} */(( <ValidatorFn>unimplemented())); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn { return /** @type {?} */(( <AsyncValidatorFn>unimplemented())); }\n/**\n * @abstract\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any) {}\n}\n\nfunction NgControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._parent;\n/** @type {?} */\nNgControl.prototype.name;\n/** @type {?} */\nNgControl.prototype.valueAccessor;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawValidators;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawAsyncValidators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}